{"version":3,"sources":["features/movies/MovieTile/ratingStar.svg","images/Profile.svg","features/people/peopleSlice.js","features/movies/api.js","features/movies/moviesSaga.js","features/people/api.js","features/people/peopleSaga.js","rootSaga.js","store.js","routes.js","features/movies/MoviePage/styled.js","features/movies/MoviePage/index.js","features/movies/MoviesContainer/styled.js","features/movies/MoviesContainer/index.js","common/Wrapper/index.js","common/Tile/index.js","features/movies/MovieTile/styled.js","features/movies/MovieTile/index.js","common/Header/index.js","features/movies/MoviesPage/index.js","features/movies/getGenreName.js","features/people/PersonPage/index.js","features/people/PersonTile/styled.js","features/people/PersonTile/index.js","features/people/PeopleContainer/styled.js","features/people/PeopleContainer/index.js","features/people/PeoplePage/index.js","features/movies/MovieListPage/index.js","App.js","serviceWorker.js","GlobalStyle.js","index.js","theme.js","features/movies/moviesSlice.js"],"names":["module","exports","peopleSlice","createSlice","name","initialState","loading","people","reducers","fetchPopularPeople","state","fetchPopularPeopleSuccess","payload","fetchPopularPeopleError","selectPeopleState","selectLoading","selectPeople","actions","getPopularMovies","a","fetch","process","response","ok","Error","statusText","json","popularMovies","results","getMovieDetails","movieId","movieDetails","getMoviesByName","input","movies","getGenres","data","genres","fetchPopularMoviesHandler","fetchGenresHandler","fetchMoviesByNameHandler","fetchMovieHandler","watchFetchPopularMovies","call","put","fetchPopularMoviesSuccess","alert","fetchPopularMoviesError","fetchGenresSuccess","fetchGenresError","movie","fetchMoviesByNameSuccess","fetchMoviesByNameError","fetchMovieSuccess","fetchMovieError","takeLatest","fetchMoviesByName","type","fetchPopularMovies","fetchGenres","fetchMovie","getPopularPeople","popularPeople","fetchPopularPeopleHandler","watchFetchPopularPeople","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","moviesReducer","peopleReducer","middleware","run","toMovie","id","toPerson","styled","require","default","MovieBackdrop","div","theme","color","black","white","src","breakpoint","mobileMax","MainInfo","MovieLongTitle","h1","MovieRating","MovieRatingImg","img","MovieRatingNote","p","MovieRatingText","useParams","useSelector","selectMovie","dispatch","useDispatch","useEffect","backdrop_path","title","star","vote_average","vote_count","StyledMoviesContainer","MoviesContainer","props","children","MovieTileImg","MovieInfoWrapper","MovieTileHeader","h2","MovieTileYear","darkerGrey","MovieTileTags","ul","MovieTileTag","li","grey","MovieAdditionalInfo","MovieRatingVotes","MovieTile","Tile","poster_path","release_date","slice","tagNames","map","tagName","key","nanoid","generateTags","genreNames","selectMovies","selectGenres","className","Wrapper","Header","genreIds","genreId","genresId","genre","find","getGenreName","mapGenreIds","genre_ids","generateMovies","StyledPersonTile","PersonImage","silver","PersonName","PersonTile","person","profile_path","profile","StyledPeopleContainer","PeopleContainer","MovieListPage","path","MoviePage","MoviesPage","PersonPage","PeoplePage","to","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","mercury","ReactDOM","render","StrictMode","blue","lightBlue","yellow","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","moviesSlice","searchQuery","query","selectMoviesState","selectSearchQuery"],"mappings":"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","file":"static/js/main.e60f9c22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ratingStar.b489e613.svg\";","module.exports = __webpack_public_path__ + \"static/media/Profile.345aaccb.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst peopleSlice = createSlice({\r\n  name: \"people\",\r\n  initialState: {\r\n    loading: true,\r\n    people: [],\r\n  },\r\n  reducers: {\r\n    fetchPopularPeople: (state) => {\r\n      state.loading = true;\r\n      state.people = [];\r\n    },\r\n    fetchPopularPeopleSuccess: (state, { payload: people }) => {\r\n      state.people = people;\r\n      state.loading = false;\r\n    },\r\n    fetchPopularPeopleError: (state) => {\r\n      state.loading = false;\r\n      state.people = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectPeopleState = (state) => state.people;\r\nexport const selectLoading = (state) => selectPeopleState(state).loading;\r\nexport const selectPeople = (state) => selectPeopleState(state).people;\r\n\r\nexport const {\r\n  fetchPopularPeople,\r\n  fetchPopularPeopleError,\r\n  fetchPopularPeopleSuccess,\r\n} = peopleSlice.actions;\r\nexport default peopleSlice.reducer;\r\n","export const getPopularMovies = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const popularMovies = await response.json();\r\n\r\n  return popularMovies.results;\r\n};\r\n\r\nexport const getMovieDetails = async (movieId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const movieDetails = await response.json();\r\n\r\n  return movieDetails;\r\n};\r\n\r\nexport const getMovieCredits = async (movieId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const movieCredits = await response.json();\r\n\r\n  return movieCredits;\r\n};\r\nexport const getMoviesByName = async (input) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${input}&page=1`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const movies = await response.json();\r\n\r\n  return movies;\r\n};\r\n\r\nexport const getGenres = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  return data.genres;\r\n};\r\n","import { takeLatest, call, put } from \"redux-saga/effects\";\r\n\r\nimport { getGenres, getMovieDetails, getMoviesByName, getPopularMovies } from \"./api\";\r\n\r\nimport {\r\n  fetchPopularMovies,\r\n  fetchPopularMoviesError,\r\n  fetchPopularMoviesSuccess,\r\n  fetchGenres,\r\n  fetchGenresError,\r\n  fetchGenresSuccess,\r\n  fetchMovie,\r\n  fetchMovieSuccess,\r\n  fetchMovieError,\r\n  fetchMoviesByName,\r\n  fetchMoviesByNameSuccess,\r\n  fetchMoviesByNameError,\r\n} from \"./moviesSlice\";\r\n\r\nfunction* fetchPopularMoviesHandler() {\r\n  try {\r\n    const popularMovies = yield call(getPopularMovies);\r\n    yield put(fetchPopularMoviesSuccess(popularMovies));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchPopularMoviesError());\r\n  }\r\n}\r\n\r\nfunction* fetchGenresHandler() {\r\n  try {\r\n    const popularMovies = yield call(getGenres);\r\n    yield put(fetchGenresSuccess(popularMovies));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchGenresError());\r\n  }\r\n}\r\nfunction* fetchMoviesByNameHandler() {\r\n  try {\r\n    const movie = yield call(getMoviesByName);\r\n    yield put(fetchMoviesByNameSuccess(movie));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchMoviesByNameError());\r\n  }\r\n}\r\n\r\nfunction* fetchMovieHandler({ payload: movieId }) {\r\n  try {\r\n    const movie = yield call(getMovieDetails, movieId);\r\n    yield put(fetchMovieSuccess(movie));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchMovieError());\r\n  }\r\n};\r\n\r\nexport function* watchFetchPopularMovies() {\r\n  yield takeLatest(fetchMoviesByName.type, fetchMoviesByNameHandler);\r\n  yield takeLatest(fetchPopularMovies.type, fetchPopularMoviesHandler);\r\n  yield takeLatest(fetchGenres.type, fetchGenresHandler);\r\n  yield takeLatest(fetchMovie.type, fetchMovieHandler);\r\n};\r\n","export const getPopularPeople = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n  const popularPeople = await response.json();\r\n\r\n  return popularPeople.results;\r\n};\r\n\r\nexport const getPersonDetails = async (personId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/${personId}?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n  const personDetails = await response.json();\r\n\r\n  return personDetails;\r\n};\r\n\r\nexport const getPersonMovieCredits = async (personId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n\r\n  const PersonMovieCredits = await response.json();\r\n\r\n  return PersonMovieCredits;\r\n}; ","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport { getPopularPeople } from \"./api\";\r\nimport {\r\n  fetchPopularPeople,\r\n  fetchPopularPeopleError,\r\n  fetchPopularPeopleSuccess,\r\n} from \"./peopleSlice\";\r\n\r\nfunction* fetchPopularPeopleHandler() {\r\n  try {\r\n    const popularPeople = yield call(getPopularPeople);\r\n    yield put(fetchPopularPeopleSuccess(popularPeople));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchPopularPeopleError());\r\n  }\r\n};\r\n\r\nexport function* watchFetchPopularPeople() {\r\n  yield takeLatest(fetchPopularPeople.type, fetchPopularPeopleHandler);\r\n};\r\n","import { all } from \"redux-saga/effects\";\r\nimport { watchFetchPopularMovies } from \"./features/movies/moviesSaga\";\r\nimport { watchFetchPopularPeople } from \"./features/people/peopleSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchFetchPopularMovies(),\r\n    watchFetchPopularPeople(),\r\n  ]);\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport moviesReducer from \"./features/movies/moviesSlice\";\r\nimport peopleReducer from \"./features/people/peopleSlice\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    movies: moviesReducer,\r\n    people: peopleReducer,\r\n  },\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","export const toMovie = ({ id } = { id: \":id\" }) => `/movies/${id}`;\r\nexport const toMovies = () => \"/movies\";\r\nexport const toPerson = ({ id } = { id: \":id\" }) => `/people/${id}`;\r\nexport const toPeople = () => \"/people\";\r\nexport const toMovieList = () => \"/movieList\";\r\n","const { default: styled } = require(\"styled-components\");\r\n\r\nexport const MovieBackdrop = styled.div`\r\n  background-color: ${({ theme }) => theme.color.black};\r\n  color: ${({ theme }) => theme.color.white};\r\n  background-image: \r\n  linear-gradient(270deg, #000000 14.11%, rgba(0, 0, 0, 0.873268) 15.08%, rgba(0, 0, 0, 0.720529) 16.51%, rgba(0, 0, 0, 0.294577) 19.99%, rgba(0, 0, 0, 0.159921) 21.88%, rgba(0, 0, 0, 0) 25.68%), \r\n  linear-gradient(90deg, #000000 13.6%, rgba(0, 0, 0, 0.984059) 14.58%, rgba(0, 0, 0, 0.967732) 15.44%, rgba(0, 0, 0, 0.865569) 16.3%, rgba(0, 0, 0, 0.230315) 22.87%, rgba(0, 0, 0, 0) 26.64%), \r\n  linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0.689555) 4.66%, rgba(0, 0, 0, 0.439033) 9.34%, rgba(0, 0, 0, 0.20628) 15.16%, rgba(0, 0, 0, 0) 24.22%), \r\n  linear-gradient(189.44deg, rgba(0, 0, 0, 0) 58.48%, rgba(0, 0, 0, 0.106473) 63.17%, rgba(0, 0, 0, 0.235359) 68.85%, rgba(0, 0, 0, 0.492821) 78.08%, rgba(0, 0, 0, 0.740286) 85.86%, #000000 92.87%), \r\n  url(${({ src }) => src});\r\n  background-size: 1920px 770px, 1920px 770px, 1920px 770px, 1920px 770px, 1368px 769px;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    background-size: 350px 148px, 350px 148px, 350px 148px, 350px 148px, 262px 148px;\r\n  }\r\n`;\r\n\r\nexport const MainInfo = styled.div`\r\n  padding-bottom: 56px;\r\n  margin: 0 auto;\r\n  width: 1368px;\r\n  height: 770px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 320px;\r\n    height: 148px;\r\n    padding: 8px 16px;\r\n  }\r\n`;\r\n\r\nexport const MovieLongTitle = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 64px;\r\n  margin: 0px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nexport const MovieRating = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const MovieRatingImg = styled.img`\r\n  width: 40px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 16px;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingNote = styled.p`\r\n  font-weight: 500;\r\n  font-size: 30px;\r\n  line-height: 1.3;\r\n  align-self: center;\r\n  margin: 0px 8px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingText = styled.p`\r\n  margin: 0px;\r\n  font-size: 16px;\r\n  line-height: 1.2;\r\n  align-self: center;\r\n  margin-top: 16px;\r\n  color: ${({ theme }) => theme.color.white};\r\n  flex-basis: 90%;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 10px;\r\n    margin-top: 0px;\r\n    margin-right: 8px;\r\n    flex-basis: unset;\r\n  } ;\r\n`;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchMovie, selectLoading, selectMovie } from \"../moviesSlice\";\r\nimport {\r\n  MovieBackdrop,\r\n  MainInfo,\r\n  MovieLongTitle,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRating,\r\n  MovieRatingNote\r\n} from \"./styled\";\r\nimport star from \"../MovieTile/ratingStar.svg\";\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const movie = useSelector(selectMovie);\r\n  const loading = useSelector(selectLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(fetchMovie(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    !loading ?\r\n      <MovieBackdrop src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}>\r\n        <MainInfo>\r\n          <MovieLongTitle>{movie.title}</MovieLongTitle>\r\n          <MovieRating>\r\n            <MovieRatingImg src={star}></MovieRatingImg>\r\n            <MovieRatingNote>{movie.vote_average}</MovieRatingNote>\r\n            <MovieRatingText>/ 10</MovieRatingText>\r\n            <MovieRatingText>{movie.vote_count} votes</MovieRatingText>\r\n          </MovieRating>\r\n        </MainInfo>\r\n      </MovieBackdrop>\r\n      :\r\n      <h1>Trwa ładowanie...</h1>\r\n  )\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledMoviesContainer = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: 24px;\r\n  grid-template-columns: repeat(4, auto);\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: 1fr;\r\n  } ;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledMoviesContainer } from \"./styled\";\r\n\r\nexport const MoviesContainer = (props) => {\r\n  return <StyledMoviesContainer>{props.children}</StyledMoviesContainer>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  max-width: 1368px;\r\n  margin: 0 auto;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: calc(100vw - 32px);\r\n    margin: 0 auto;\r\n  } ;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  padding: 16px;\r\n  box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\r\n  border-radius: 5px;\r\n  display: grid;\r\n  grid-template-columns: auto;\r\n  grid-template-rows: auto 1fr;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: auto 1fr;\r\n    grid-template-rows: auto;\r\n  };\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst MovieTileImg = styled.img`\r\n  width: 292px;\r\n  margin: 0;\r\n  margin-bottom: 16px;\r\n  border-radius: 5px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 34vw;\r\n    min-width: 114px;\r\n    margin: 0;\r\n    margin-right: 16px;\r\n  } ;\r\n`;\r\nconst MovieInfoWrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n`;\r\nconst MovieTileHeader = styled.h2`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  font-weight: 500;\r\n  margin-bottom: 8px;\r\n  font-size: 22px;\r\n  line-height: 130%;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    margin-bottom: 4px;\r\n  } ;\r\n`;\r\nconst MovieTileYear = styled.p`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  margin-bottom: 8px;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 16px;\r\n  } ;\r\n`;\r\nconst MovieTileTags = styled.ul`\r\n  margin: 0;\r\n  padding-left: 0px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin-left: -8px;\r\n  margin-bottom: 45px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 16px;\r\n  } ;\r\n`;\r\nconst MovieTileTag = styled.li`\r\n  background-color: ${({ theme }) => theme.color.grey};\r\n  font-family: Poppins;\r\n  font-size: 14px;\r\n  line-height: 140%;\r\n  border-radius: 5px;\r\n  margin-left: 8px;\r\n  margin-bottom: 8px;\r\n  padding: 8px 16px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 4px 8px;\r\n    font-size: 10px;\r\n    margin-bottom: 8px;\r\n  } ;\r\n`;\r\nconst MovieAdditionalInfo = styled.div`\r\n  margin: 0;\r\n  position: absolute;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    position: relative;\r\n  } ;\r\n`;\r\nconst MovieRatingImg = styled.img`\r\n  width: 24px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 16px;\r\n  } ;\r\n`;\r\nconst MovieRatingText = styled.p`\r\n  margin-right: 12px;\r\n  font-family: Poppins;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  margin: 0 12px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n  } ;\r\n`;\r\nconst MovieRatingVotes = styled.p`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n  } ;\r\n`;\r\n\r\nexport {\r\n  MovieTileImg,\r\n  MovieTileHeader,\r\n  MovieTileYear,\r\n  MovieTileTags,\r\n  MovieTileTag,\r\n  MovieAdditionalInfo,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  MovieInfoWrapper,\r\n};\r\n","import React from \"react\";\r\nimport star from \"./ratingStar.svg\";\r\nimport Tile from \"../../../common/Tile\";\r\nimport {\r\n  MovieTileImg,\r\n  MovieTileHeader,\r\n  MovieTileYear,\r\n  MovieTileTags,\r\n  MovieTileTag,\r\n  MovieAdditionalInfo,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  MovieInfoWrapper,\r\n} from \"./styled\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst generateTags = (tagNames) => {\r\n  if (tagNames) {\r\n    return tagNames.map((tagName) => {\r\n      return <MovieTileTag key={nanoid()}>{tagName}</MovieTileTag>;\r\n    });\r\n  }\r\n};\r\n\r\nconst MovieTile = (props) => {\r\n  return (\r\n    <Tile>\r\n      <MovieTileImg\r\n        src={\r\n          `https://image.tmdb.org/t/p/w400${props.movie.poster_path}` ||\r\n          `./default_poster.svg`\r\n        }\r\n      ></MovieTileImg>\r\n      <MovieInfoWrapper>\r\n        <MovieTileHeader>{props.movie.title}</MovieTileHeader>\r\n        <MovieTileYear>{props.movie.release_date.slice(0, 4)}</MovieTileYear>\r\n        <MovieTileTags>{generateTags(props.genreNames)}</MovieTileTags>\r\n        <MovieAdditionalInfo>\r\n          <MovieRatingImg src={star}></MovieRatingImg>\r\n          <MovieRatingText>{props.movie.vote_average}</MovieRatingText>\r\n          <MovieRatingVotes>{props.movie.vote_count} votes</MovieRatingVotes>\r\n        </MovieAdditionalInfo>\r\n      </MovieInfoWrapper>\r\n    </Tile>\r\n  );\r\n};\r\n\r\nexport default MovieTile;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.h1`\r\n  margin: 56px 0 24px 0;\r\n  font-weight: 600;\r\n  font-size: 36px;\r\n  line-height: 1.2;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin: 24px 0 12px 0;\r\n    font-size: 18px;\r\n  } ;\r\n`;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MoviesContainer } from \"../MoviesContainer\";\r\nimport Wrapper from \"../../../common/Wrapper/index\";\r\nimport {\r\n  fetchPopularMovies,\r\n  selectLoading,\r\n  selectMovies,\r\n  fetchGenres,\r\n  selectGenres,\r\n} from \"../moviesSlice\";\r\nimport MovieTile from \"../MovieTile\";\r\nimport Header from \"../../../common/Header\";\r\nimport { getGenreName } from \"../getGenreName\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchGenres());\r\n    dispatch(fetchPopularMovies());\r\n  }, [dispatch]);\r\n\r\n  const loading = useSelector(selectLoading);\r\n  const movies = useSelector(selectMovies);\r\n  const genres = useSelector(selectGenres);\r\n\r\n  const mapGenreIds = (genreIds, genres) => {\r\n    return genreIds.map((genreId) => {\r\n      return getGenreName(genreId, genres);\r\n    });\r\n  };\r\n\r\n  const generateMovies = (movies) => {\r\n    return movies.map((movie) => {\r\n      const genreNames = mapGenreIds(movie.genre_ids, genres);\r\n      return (\r\n        <MovieTile\r\n          key={movie.id}\r\n          genreNames={genreNames}\r\n          movie={movie}\r\n        ></MovieTile>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Wrapper>\r\n          <Header>Popular movies</Header>\r\n          <MoviesContainer>{generateMovies(movies)}</MoviesContainer>\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"App\">Trwa ładowanie...</div>;\r\n  }\r\n};\r\n","export const getGenreName = (genresId, genres) => {\r\n  const genre = genres.find(genre => genre.id === genresId);\r\n  return genre ? genre.name : \"\";\r\n};","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n\r\n  return (\r\n    <h1>Person details id: {id}</h1>\r\n  )\r\n};","import styled from \"styled-components\";\r\nimport Tile from \"../../../common/Tile\";\r\n\r\nexport const StyledPersonTile = styled(Tile)`\r\n  grid-gap: 12px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 8px;\r\n    grid-template-columns: auto;\r\n    grid-gap: 8px;\r\n  };\r\n`;\r\n\r\nexport const PersonImage = styled.img`\r\n  margin: 0 auto;\r\n  width: 176px;\r\n  border-radius: 5px;\r\n  background: ${({ theme }) => theme.color.silver};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 120px;\r\n  };\r\n`;\r\n\r\nexport const PersonName = styled.h2`\r\n  font-weight: 500;\r\n  font-size: 22px;\r\n  line-height: 1.3;\r\n  text-align: center;\r\n  margin: 0 0 8px 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    margin-bottom: 7px;\r\n  };\r\n`;","import React from \"react\";\r\nimport { StyledPersonTile, PersonImage, PersonName } from \"./styled\";\r\nimport profile from \"../../../images/Profile.svg\";\r\n\r\nconst PersonTile = ({ person }) => (\r\n  <StyledPersonTile>\r\n    <PersonImage src={`https://image.tmdb.org/t/p/w185${person.profile_path}` || profile} />\r\n    <PersonName>{person.name}</PersonName>\r\n  </StyledPersonTile>\r\n);\r\n\r\nexport default PersonTile;","import styled from \"styled-components\";\r\n\r\nexport const StyledPeopleContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(208px, 1fr));\r\n  grid-gap: 24px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(136px, 1fr));\r\n    grid-gap: 16px;\r\n  };\r\n`;","import React from \"react\";\r\nimport PersonTile from \"../PersonTile\";\r\nimport { StyledPeopleContainer } from \"./styled\";\r\n\r\nconst PeopleContainer = ({ people }) => (\r\n  <StyledPeopleContainer>\r\n    {people !== [] ? people.map(person => <PersonTile key={person.id} person={person} />)\r\n      : <h1>brak osób do pokazania</h1>}\r\n  </StyledPeopleContainer>\r\n);\r\n\r\nexport default PeopleContainer;","import React, { useEffect } from \"react\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport Header from \"../../../common/Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPopularPeople, selectLoading, selectPeople } from \"../peopleSlice\";\r\nimport PeopleContainer from \"../PeopleContainer\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const people = useSelector(selectPeople);\r\n  const loading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPopularPeople())\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !loading\r\n      ?\r\n      <Wrapper>\r\n        <Header>Popular people</Header>\r\n        <PeopleContainer people={people} />\r\n      </Wrapper>\r\n      :\r\n      <h1>trwa ładowanie...</h1>\r\n  )\r\n};","import React, { useEffect } from \"react\";\r\nconst { useDispatch } = require(\"react-redux\");\r\nconst { fetchMoviesByName } = require(\"../moviesSlice\");\r\n\r\nconst MovieListPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMoviesByName(\"mulan\"));\r\n  }, [dispatch]);\r\n\r\n  return <h1>Cześć !</h1>;\r\n};\r\n\r\nexport default MovieListPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { toMovie, toMovieList, toMovies, toPeople, toPerson } from \"./routes\";\r\nimport MoviePage from \"./features/movies/MoviePage\";\r\nimport MoviesPage from \"./features/movies/MoviesPage\";\r\nimport PersonPage from \"./features/people/PersonPage\";\r\nimport PeoplePage from \"./features/people/PeoplePage\";\r\nimport MovieListPage from \"./features/movies/MovieListPage\";\r\n\r\nexport default () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path={toMovie()}>\r\n        <MoviePage />\r\n      </Route>\r\n      <Route path={toMovies()}>\r\n        <MoviesPage />\r\n      </Route>\r\n      <Route path={toPerson()}>\r\n        <PersonPage />\r\n      </Route>\r\n      <Route path={toPeople()}>\r\n        <PeoplePage />\r\n      </Route>\r\n      <Route path={toMovieList()}>\r\n        <MovieListPage />\r\n      </Route>\r\n      <Route>\r\n        <Redirect to={toMovies()} />\r\n      </Route>\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Poppins', sans-serif;\r\n        background: ${({ theme }) => theme.color.mercury};\r\n        margin: 0;\r\n    }\r\n`;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const theme = {\r\n    color: {\r\n        black: \"#000000\",\r\n        blue: \"#0044CC\",\r\n        silver: \"#C4C4C4\",\r\n        lightBlue: \"#D6E4FF\",\r\n        yellow: \"#FCD420\",\r\n        darkerGrey: \"#7E839A\",\r\n        grey: \"#E4E6F0\",\r\n        mercury: \"#E5E5E5\",\r\n        white: \"#FFFFFF\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst moviesSlice = createSlice({\r\n  name: \"movies\",\r\n  initialState: {\r\n    loading: true,\r\n    movies: [],\r\n    genres: [],\r\n    movie: {},\r\n    searchQuery: \"\",\r\n  },\r\n  reducers: {\r\n    fetchPopularMovies: (state) => {\r\n      state.loading = true;\r\n      state.movies = [];\r\n    },\r\n    fetchPopularMoviesSuccess: (state, { payload: movies }) => {\r\n      state.movies = movies;\r\n      state.loading = false;\r\n    },\r\n    fetchPopularMoviesError: (state) => {\r\n      state.loading = false;\r\n      state.movies = [];\r\n    },\r\n    fetchGenres: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchGenresSuccess: (state, { payload: genres }) => {\r\n      state.genres = genres;\r\n      state.loading = false;\r\n    },\r\n    fetchGenresError: (state) => {\r\n      state.loading = false;\r\n    },\r\n    fetchMovie: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchMovieSuccess: (state, { payload: movie }) => {\r\n      state.movie = movie;\r\n      state.loading = false;\r\n    },\r\n    fetchMovieError: (state) => {\r\n      state.loading = false;\r\n    },\r\n    fetchMoviesByName: (state, { payload: query }) => {\r\n      state.searchQuery = query;\r\n      state.loading = true;\r\n    },\r\n    fetchMoviesByNameSuccess: (state, { payload: movies }) => {\r\n      state.movies = movies;\r\n      state.loading = false;\r\n    },\r\n    fetchMoviesByNameError: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectMoviesState = (state) => state.movies;\r\nexport const selectLoading = (state) => selectMoviesState(state).loading;\r\nexport const selectMovies = (state) => selectMoviesState(state).movies;\r\nexport const selectMovie = (state) => selectMoviesState(state).movie;\r\nexport const selectGenres = (state) => selectMoviesState(state).genres;\r\nexport const selectSearchQuery = (state) => selectMoviesState(state).searchQuery;\r\n\r\nexport const {\r\n  fetchPopularMovies,\r\n  fetchPopularMoviesError,\r\n  fetchPopularMoviesSuccess,\r\n  fetchGenres,\r\n  fetchGenresError,\r\n  fetchGenresSuccess,\r\n  fetchMovie,\r\n  fetchMovieError,\r\n  fetchMovieSuccess,\r\n  fetchMoviesByName,\r\n  fetchMoviesByNameSuccess,\r\n  fetchMoviesByNameError,\r\n} = moviesSlice.actions;\r\nexport default moviesSlice.reducer;\r\n"],"sourceRoot":""}