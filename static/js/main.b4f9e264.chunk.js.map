{"version":3,"sources":["features/movies/MovieTile/ratingStar.svg","images/Poster.svg","images/Profile.svg","Pager/images/Prev.svg","Pager/images/DisabledPrev.svg","Pager/images/Next.svg","Pager/images/DisabledNext.svg","images/searchIcon.svg","images/camera.svg","features/people/peopleSlice.js","features/movies/api.js","features/movies/moviesSaga.js","features/people/api.js","features/people/peopleSaga.js","rootSaga.js","store.js","routes.js","features/movies/MoviePage/styled.js","common/Wrapper/index.js","features/movies/MoviePage/MovieDetailsTile/styled.js","features/movies/MoviePage/MovieDetailsTile/index.js","common/Tile/index.js","features/people/PersonTile/styled.js","features/people/PersonTile/index.js","features/people/PeopleContainer/styled.js","features/people/PeopleContainer/index.js","common/Header/index.js","features/movies/MoviePage/index.js","features/movies/MoviesContainer/styled.js","features/movies/MoviesContainer/index.js","features/movies/MovieTile/styled.js","features/movies/MovieTile/index.js","features/movies/getGenreName.js","Pager/styled.js","theme.js","Pager/index.js","features/movies/MoviesPage/index.js","features/people/PersonPage/PersonDetailsTile/styled.js","features/people/PersonPage/PersonDetailsTile/index.js","features/people/PersonPage/index.js","features/people/PeoplePage/index.js","features/movies/MovieListPage/index.js","features/search/styled.js","features/search/index.js","Navigation/styled.js","Navigation/index.js","App.js","serviceWorker.js","GlobalStyle.js","index.js","features/movies/moviesSlice.js"],"names":["module","exports","peopleSlice","createSlice","name","initialState","loading","people","person","reducers","fetchPopularPeople","state","fetchPopularPeopleSuccess","payload","fetchPopularPeopleError","fetchPerson","fetchPersonSuccess","fetchPersonError","selectPeopleState","selectLoading","selectPeople","selectPerson","actions","getPopularMovies","pageNumber","a","fetch","process","response","ok","Error","statusText","json","popularMovies","getMovieDetails","movieId","movieDetails","getMovieCredits","movieCredits","getMoviesByQuery","query","page","movies","getGenres","data","genres","fetchPopularMoviesHandler","fetchGenresHandler","fetchMoviesByQueryHandler","fetchMovieHandler","fetchMovieCreditsHandler","watchFetchPopularMovies","call","put","fetchPopularMoviesSuccess","fetchPopularMoviesError","alert","fetchGenresSuccess","fetchGenresError","fetchMoviesByQuerySuccess","fetchMoviesByQueryError","movie","fetchMovieSuccess","fetchMovieError","credits","fetchMovieCreditsSuccess","fetchMovieCreditsError","takeLatest","fetchMoviesByQuery","type","fetchPopularMovies","fetchGenres","fetchMovie","fetchMovieCredits","getPopularPeople","popularPeople","results","getPersonDetails","personId","personDetails","fetchPopularPeopleHandler","fetchPersonHandler","watchFetchPopularPeople","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","moviesReducer","peopleReducer","middleware","run","toMovie","id","toPerson","styled","require","default","MovieBackdrop","div","theme","color","black","white","src","breakpoint","mobileMax","MainInfo","MovieLongTitle","h1","MovieRating","MovieRatingImg","img","MovieRatingNote","p","MovieRatingText","DetailsTile","Image","Name","Frame","Text","GrayText","stormGray","DesktopGrayText","Birth","Description","MobileDescription","DesktopDescription","ProductionYear","Tags","ul","Tag","li","grey","MovieRatingVotes","darkerGrey","DesktopMovieRatingVotes","Rating","MovieDetailsTile","poster_path","poster","alt","original_title","release_date","slice","production_countries","map","country","join","genre","key","star","vote_average","vote_count","overview","woodsmoke","StyledPersonTile","Tile","PersonImage","DefaultImageContainer","silver","DefaultImage","PersonName","h2","Character","h3","PersonTile","as","Link","to","profile_path","profile","character","job","StyledPeopleContainer","PeopleContainer","nanoid","useParams","useSelector","selectMovie","cast","selectMovieCast","crew","selectMovieCrew","dispatch","useDispatch","useEffect","backdrop_path","title","Wrapper","Header","StyledMoviesContainer","MoviesContainer","props","children","MovieTileImg","MovieInfoWrapper","MovieTileHeader","MovieTileYear","MovieTileTags","MovieTileTag","MovieAdditionalInfo","MovieTile","Poster","tagNames","tagName","generateTags","genreNames","getGenreName","genresId","find","PagerWrapper","PagerButton","button","lightBlue","PagerPrev","PagerNext","PagerText","PagerInfo","Bold","b","blue","yellow","mercury","whisper","Pager","currentPage","selectCurrentPage","allPages","selectAllPages","mobileWidth","disablePrevious","disableNext","onClick","setPageToFirst","disabled","DisabledPrev","Prev","window","innerWidth","decrementPage","incrementPage","DisabledNext","Next","setPageToLast","selectMovies","selectGenres","className","genreIds","genreId","mapGenreIds","genre_ids","generateMovies","MobileGrayText","PersonDetailsTile","birthday","place_of_birth","biography","selectSearchQuery","MovieListPage","searchQuery","Label","label","Icon","Input","input","Search","searchIcon","placeholder","Container","NavigationStyle","Title","NavigationList","NavigationItem","StyledLink","NavLink","attrs","activeClassName","Logo","Navigation","camera","path","MoviePage","MoviesPage","PersonPage","PeoplePage","Boolean","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","moviesSlice","movieCast","movieCrew","total_pages","selectMoviesState"],"mappings":"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","file":"static/js/main.b4f9e264.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ratingStar.b489e613.svg\";","module.exports = __webpack_public_path__ + \"static/media/Poster.8fb01e35.svg\";","module.exports = __webpack_public_path__ + \"static/media/Profile.345aaccb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Prev.52048bc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/DisabledPrev.ba0ba952.svg\";","module.exports = __webpack_public_path__ + \"static/media/Next.2cf439ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/DisabledNext.c37d85ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.1c54e360.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.34c58f8f.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst peopleSlice = createSlice({\r\n  name: \"people\",\r\n  initialState: {\r\n    loading: true,\r\n    people: [],\r\n    person: {},\r\n  },\r\n  reducers: {\r\n    fetchPopularPeople: (state) => {\r\n      state.loading = true;\r\n      state.people = [];\r\n    },\r\n    fetchPopularPeopleSuccess: (state, { payload: people }) => {\r\n      state.people = people;\r\n      state.loading = false;\r\n    },\r\n    fetchPopularPeopleError: (state) => {\r\n      state.loading = false;\r\n      state.people = [];\r\n    },\r\n    fetchPerson: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchPersonSuccess: (state, { payload: person }) => {\r\n      state.person = person;\r\n      state.loading = false;\r\n    },\r\n    fetchPersonError: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectPeopleState = state => state.people;\r\nexport const selectLoading = state => selectPeopleState(state).loading;\r\nexport const selectPeople = state => selectPeopleState(state).people;\r\nexport const selectPerson = state => selectPeopleState(state).person;\r\n\r\nexport const {\r\n  fetchPopularPeople,\r\n  fetchPopularPeopleError,\r\n  fetchPopularPeopleSuccess,\r\n  fetchPerson,\r\n  fetchPersonError,\r\n  fetchPersonSuccess,\r\n} = peopleSlice.actions;\r\n\r\nexport default peopleSlice.reducer;\r\n","export const getPopularMovies = async (pageNumber) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&page=${pageNumber}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const popularMovies = await response.json();\r\n\r\n  return popularMovies;\r\n};\r\n\r\nexport const getMovieDetails = async (movieId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const movieDetails = await response.json();\r\n\r\n  return movieDetails;\r\n};\r\n\r\nexport const getMovieCredits = async (movieId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const movieCredits = await response.json();\r\n\r\n  return movieCredits;\r\n};\r\nexport const getMoviesByQuery = async ({query,page}) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${query}&page=${page}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n  new Error(response.statusText);\r\n  }\r\n  const movies = await response.json();\r\n  \r\n  return movies;\r\n};\r\n\r\nexport const getGenres = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  return data.genres;\r\n};\r\n","import { takeLatest, call, put } from \"redux-saga/effects\";\r\n\r\nimport { getGenres, getMovieCredits, getMovieDetails, getMoviesByQuery, getPopularMovies } from \"./api\";\r\n\r\nimport {\r\n  fetchPopularMovies,\r\n  fetchPopularMoviesError,\r\n  fetchPopularMoviesSuccess,\r\n  fetchGenres,\r\n  fetchGenresError,\r\n  fetchGenresSuccess,\r\n  fetchMovie,\r\n  fetchMovieSuccess,\r\n  fetchMovieError,\r\n  fetchMoviesByQuery,\r\n  fetchMoviesByQuerySuccess,\r\n  fetchMoviesByQueryError,\r\n  fetchMovieCredits,\r\n  fetchMovieCreditsError,\r\n  fetchMovieCreditsSuccess,\r\n} from \"./moviesSlice\";\r\n\r\nfunction* fetchPopularMoviesHandler({payload: page}) {\r\n  try {\r\n    const popularMovies = yield call(getPopularMovies,page);\r\n    yield put(fetchPopularMoviesSuccess(popularMovies));\r\n  } catch (error) {\r\n    yield put(fetchPopularMoviesError());\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n  }\r\n}\r\n\r\nfunction* fetchGenresHandler() {\r\n  try {\r\n    const popularMovies = yield call(getGenres);\r\n    yield put(fetchGenresSuccess(popularMovies));\r\n  } catch (error) {\r\n    yield put(fetchGenresError());\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n  }\r\n}\r\n\r\nfunction* fetchMoviesByQueryHandler({ payload: query }) {\r\n  try {\r\n    const movies = yield call(getMoviesByQuery, query);\r\n    yield put(fetchMoviesByQuerySuccess(movies));\r\n  } catch (error) {\r\n    yield put(fetchMoviesByQueryError());\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n  }\r\n}\r\n\r\nfunction* fetchMovieHandler({ payload: movieId }) {\r\n  try {\r\n    const movie = yield call(getMovieDetails, movieId);\r\n    yield put(fetchMovieSuccess(movie));\r\n  } catch (error) {\r\n    yield put(fetchMovieError());\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n  }\r\n};\r\n\r\nfunction* fetchMovieCreditsHandler({ payload: movieId }) {\r\n  try {\r\n    const credits = yield call(getMovieCredits, movieId);\r\n    yield put(fetchMovieCreditsSuccess(credits));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchMovieCreditsError());\r\n  }\r\n};\r\n\r\nexport function* watchFetchPopularMovies() {\r\n  yield takeLatest(fetchMoviesByQuery.type, fetchMoviesByQueryHandler);\r\n  yield takeLatest(fetchPopularMovies.type, fetchPopularMoviesHandler);\r\n  yield takeLatest(fetchGenres.type, fetchGenresHandler);\r\n  yield takeLatest(fetchMovie.type, fetchMovieHandler);\r\n  yield takeLatest(fetchMovieCredits.type, fetchMovieCreditsHandler);\r\n};\r\n","export const getPopularPeople = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n  const popularPeople = await response.json();\r\n\r\n  return popularPeople.results;\r\n};\r\n\r\nexport const getPersonDetails = async (personId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/${personId}?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n  const personDetails = await response.json();\r\n\r\n  return personDetails;\r\n};\r\n\r\nexport const getPersonMovieCredits = async (personId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n\r\n  const PersonMovieCredits = await response.json();\r\n\r\n  return PersonMovieCredits;\r\n}; ","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport { getPersonDetails, getPopularPeople } from \"./api\";\r\nimport {\r\n  fetchPerson,\r\n  fetchPersonError,\r\n  fetchPersonSuccess,\r\n  fetchPopularPeople,\r\n  fetchPopularPeopleError,\r\n  fetchPopularPeopleSuccess,\r\n} from \"./peopleSlice\";\r\n\r\nfunction* fetchPopularPeopleHandler() {\r\n  try {\r\n    const popularPeople = yield call(getPopularPeople);\r\n    yield put(fetchPopularPeopleSuccess(popularPeople));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchPopularPeopleError());\r\n  }\r\n};\r\n\r\nfunction* fetchPersonHandler({ payload: personId }) {\r\n  try {\r\n    const person = yield call(getPersonDetails, personId);\r\n    yield put(fetchPersonSuccess(person));\r\n  } catch (error) {\r\n    yield call(alert, error + \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchPersonError());\r\n  }\r\n};\r\n\r\nexport function* watchFetchPopularPeople() {\r\n  yield takeLatest(fetchPopularPeople.type, fetchPopularPeopleHandler);\r\n  yield takeLatest(fetchPerson.type, fetchPersonHandler);\r\n};\r\n","import { all } from \"redux-saga/effects\";\r\nimport { watchFetchPopularMovies } from \"./features/movies/moviesSaga\";\r\nimport { watchFetchPopularPeople } from \"./features/people/peopleSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchFetchPopularMovies(),\r\n    watchFetchPopularPeople(),\r\n  ]);\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport moviesReducer from \"./features/movies/moviesSlice\";\r\nimport peopleReducer from \"./features/people/peopleSlice\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    movies: moviesReducer,\r\n    people: peopleReducer,\r\n  },\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","export const toMovie = ({ id } = { id: \":id\" }) => `/movies/${id}`;\r\nexport const toMovies = () => \"/movies\";\r\nexport const toPerson = ({ id } = { id: \":id\" }) => `/people/${id}`;\r\nexport const toPeople = () => \"/people\";\r\nexport const toMovieList = () => \"/movieList\";\r\n","const { default: styled } = require(\"styled-components\");\r\n\r\nexport const MovieBackdrop = styled.div`\r\n  background-color: ${({ theme }) => theme.color.black};\r\n  color: ${({ theme }) => theme.color.white};\r\n  background-image: \r\n  linear-gradient(270deg, #000000 14.11%, rgba(0, 0, 0, 0.873268) 15.08%, rgba(0, 0, 0, 0.720529) 16.51%, rgba(0, 0, 0, 0.294577) 19.99%, rgba(0, 0, 0, 0.159921) 21.88%, rgba(0, 0, 0, 0) 25.68%), \r\n  linear-gradient(90deg, #000000 13.6%, rgba(0, 0, 0, 0.984059) 14.58%, rgba(0, 0, 0, 0.967732) 15.44%, rgba(0, 0, 0, 0.865569) 16.3%, rgba(0, 0, 0, 0.230315) 22.87%, rgba(0, 0, 0, 0) 26.64%), \r\n  linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0.689555) 4.66%, rgba(0, 0, 0, 0.439033) 9.34%, rgba(0, 0, 0, 0.20628) 15.16%, rgba(0, 0, 0, 0) 24.22%), \r\n  linear-gradient(189.44deg, rgba(0, 0, 0, 0) 58.48%, rgba(0, 0, 0, 0.106473) 63.17%, rgba(0, 0, 0, 0.235359) 68.85%, rgba(0, 0, 0, 0.492821) 78.08%, rgba(0, 0, 0, 0.740286) 85.86%, #000000 92.87%), \r\n  url(${({ src }) => src});\r\n  background-size: 1920px 770px, 1920px 770px, 1920px 770px, 1920px 770px, 1368px 769px;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    background-size: 350px 148px, 350px 148px, 350px 148px, 350px 148px, 262px 148px;\r\n  }\r\n`;\r\n\r\nexport const MainInfo = styled.div`\r\n  padding-bottom: 56px;\r\n  margin: 0 auto;\r\n  width: 1368px;\r\n  height: 770px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 320px;\r\n    height: 148px;\r\n    padding: 8px 16px;\r\n  }\r\n`;\r\n\r\nexport const MovieLongTitle = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 64px;\r\n  margin: 0px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nexport const MovieRating = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const MovieRatingImg = styled.img`\r\n  width: 40px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 16px;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingNote = styled.p`\r\n  font-weight: 500;\r\n  font-size: 30px;\r\n  line-height: 1.3;\r\n  align-self: center;\r\n  margin: 0px 8px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingText = styled.p`\r\n  margin: 0px;\r\n  font-size: 16px;\r\n  line-height: 1.2;\r\n  align-self: center;\r\n  margin-top: 16px;\r\n  color: ${({ theme }) => theme.color.white};\r\n  flex-basis: 90%;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 10px;\r\n    margin-top: 0px;\r\n    margin-right: 8px;\r\n    flex-basis: unset;\r\n  } ;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  max-width: 1368px;\r\n  margin: 0 auto;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: calc(100vw - 32px);\r\n    margin: 0 auto;\r\n  } ;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const DetailsTile = styled.div`\r\n  padding: 40px;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  color: ${({ theme }) => theme.color.black};\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  grid-gap: 40px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 16px;\r\n    grid-gap: 16px;\r\n    grid-template-areas:\r\n      \"image info\"\r\n      \"description description\"\r\n    ;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 312px;\r\n  height: 464px;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 114px;\r\n    height: 169px;\r\n  }\r\n`;\r\n\r\nexport const Name = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 36px;\r\n  margin: 8px 0px 24px 0px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 130%;\r\n    margin: 0px 0px 4px 0px;\r\n  }\r\n`;\r\n\r\nexport const Frame = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  line-height: 120%;\r\n  margin-right: 10px;\r\n  color: ${({ theme }) => theme.color.black};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 12px;\r\n    margin-right: 4px;\r\n  }\r\n`;\r\nexport const GrayText = styled(Text)`\r\n  color: ${({ theme }) => theme.color.stormGray};\r\n`;\r\n\r\nexport const DesktopGrayText = styled(GrayText)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileGrayText = styled(GrayText)`\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Birth = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 8px;\r\n  margin: 0px 0px 24px 0px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 20px;\r\n  line-height: 1.6;\r\n  margin: 0px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    grid-area: description;\r\n  }\r\n`;\r\n\r\nexport const MobileDescription = styled(Description)`\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopDescription = styled(Description)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ProductionYear = styled.p`\r\n  margin: 0px 0px 24px 0px;\r\n  font-size: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-weight: normal;\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const Tags = styled.ul`\r\n  margin: 0;\r\n  padding-left: 0px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin-left: -16px;\r\n  margin-bottom: 8px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 4px;\r\n    margin-left: -8px;\r\n  } ;\r\n`;\r\n\r\nexport const Tag = styled.li`\r\n  background-color: ${({ theme }) => theme.color.grey};\r\n  font-size: 14px;\r\n  line-height: 1;\r\n  font-weight: normal;\r\n  border-radius: 5px;\r\n  margin: 0px 0px 16px 16px;\r\n  padding: 8px 16px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 4px 8px;\r\n    font-style: normal;\r\n    font-size: 10px;\r\n    line-height: 110%;\r\n    margin: 0px 0px 8px 8px;\r\n  };\r\n`;\r\n\r\nexport const MovieRatingImg = styled.img`\r\n  width: 24px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 16px;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingText = styled.p`\r\n  font-weight: 500;\r\n  font-size: 22px;\r\n  line-height: 130%;\r\n  margin: 0 8px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n    font-weight: 600;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingVotes = styled.p`\r\n  margin: 0;\r\n  font-size: 14px;\r\n  line-height: 120%;\r\n  align-self: flex-end;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  margin-right: 12px;\r\n  margin-bottom: 3px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n    margin: 0;\r\n  };\r\n`;\r\nexport const DesktopMovieRatingVotes = styled(MovieRatingVotes)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Rating = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 24px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;","import React from \"react\";\r\nimport {\r\n  DetailsTile,\r\n  Image,\r\n  ProductionYear,\r\n  Text,\r\n  Birth as ProductionAndRelease,\r\n  MobileDescription,\r\n  DesktopDescription,\r\n  DesktopGrayText,\r\n  Frame,\r\n  Name as Title,\r\n  Tags,\r\n  Tag,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  Rating,\r\n  DesktopMovieRatingVotes,\r\n} from \"./styled\";\r\nimport star from \"../../MovieTile/ratingStar.svg\";\r\nimport poster from \"../../../../images/Poster.svg\";\r\n\r\nconst MovieDetailsTile = ({ movie }) => (\r\n  <DetailsTile>\r\n    <Image src={movie.poster_path ? `https://image.tmdb.org/t/p/w342${movie.poster_path}` : poster} alt=\"\" />\r\n    <section>\r\n      <Title>{movie.original_title}</Title>\r\n      {movie.release_date &&\r\n        <ProductionYear>{movie.release_date.slice(0, 4)}</ProductionYear>\r\n      }\r\n      <ProductionAndRelease>\r\n        <Frame>\r\n          <DesktopGrayText>Production:</DesktopGrayText>\r\n          <Text>{movie.production_countries.map(country => country.name).join(\", \")}</Text>\r\n        </Frame>\r\n        {movie.release_date &&\r\n          <Frame>\r\n            <DesktopGrayText>Release date:</DesktopGrayText>\r\n            <Text>{movie.release_date.slice(8, 10)}.{movie.release_date.slice(5, 7)}.{movie.release_date.slice(0, 4)}</Text>\r\n          </Frame>\r\n        }\r\n      </ProductionAndRelease>\r\n      <Tags>\r\n        {movie.genres.map(genre =>\r\n          <Tag key={genre.id}>{genre.name}</Tag>)}\r\n      </Tags>\r\n      <Rating>\r\n        <MovieRatingImg src={star}></MovieRatingImg>\r\n        <MovieRatingText>{movie.vote_average}</MovieRatingText>\r\n        <DesktopMovieRatingVotes>/ 10</DesktopMovieRatingVotes>\r\n        <MovieRatingVotes>{movie.vote_count} votes</MovieRatingVotes>\r\n      </Rating>\r\n      <DesktopDescription>{movie.overview}</DesktopDescription>\r\n    </section>\r\n    <MobileDescription>{movie.overview}</MobileDescription>\r\n  </DetailsTile>\r\n);\r\n\r\nexport default MovieDetailsTile;","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  padding: 16px;\r\n  box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\r\n  border-radius: 5px;\r\n  display: grid;\r\n  grid-template-columns: auto;\r\n  grid-template-rows: auto 1fr;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.color.woodsmoke};\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: auto 1fr;\r\n    grid-template-rows: auto;\r\n  };\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Tile from \"../../../common/Tile\";\r\n\r\nexport const StyledPersonTile = styled(Tile)`\r\n  grid-gap: 12px;\r\n   \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 8px;\r\n    grid-template-columns: auto;\r\n    grid-gap: 8px;\r\n  };\r\n`;\r\n\r\nexport const PersonImage = styled.img`\r\n  margin: 0 auto;\r\n  width: 177px;\r\n  height: 264px;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 120px;\r\n    height: 178px;\r\n  };\r\n`;\r\n\r\nexport const DefaultImageContainer = styled.div`\r\n  margin: 0 auto;\r\n  width: 177px;\r\n  height: 264px;\r\n  border-radius: 5px;\r\n  background: ${({ theme }) => theme.color.silver};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 120px;\r\n    height: 178px;\r\n  };\r\n`;\r\n\r\nexport const DefaultImage = styled.img`\r\n  width: 72px;\r\n  height: 72px;\r\n`;\r\n\r\nexport const PersonName = styled.h2`\r\n  font-weight: 500;\r\n  font-size: 22px;\r\n  line-height: 1.3;\r\n  text-align: center;\r\n  margin: 0 0 8px 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    margin-bottom: 7px;\r\n  };\r\n`;\r\n\r\nexport const Character = styled.h3`\r\n  font-weight: normal;\r\n  font-size: 18px;\r\n  line-height: 1.5;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  margin: -16px 0 0 0;\r\n  text-align: center;\r\n`;","import React from \"react\";\r\nimport { StyledPersonTile, PersonImage, PersonName, DefaultImageContainer, DefaultImage, Character } from \"./styled\";\r\nimport profile from \"../../../images/Profile.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toPerson } from \"../../../routes\";\r\n\r\nconst PersonTile = ({ person }) => (\r\n  <StyledPersonTile as={Link} to={toPerson({ id: person.id })}>\r\n    {\r\n      person.profile_path ?\r\n        <PersonImage src={`https://image.tmdb.org/t/p/w185${person.profile_path}`} /> :\r\n        <DefaultImageContainer>\r\n          <DefaultImage src={profile} />\r\n        </DefaultImageContainer>\r\n    }\r\n    <PersonName> {person.name}</PersonName>\r\n    {\r\n      person.character &&\r\n      <Character>{person.character}</Character>\r\n    }\r\n    {\r\n      person.job &&\r\n      <Character>{person.job}</Character>\r\n    }\r\n  </StyledPersonTile >\r\n);\r\n\r\nexport default PersonTile;","import styled from \"styled-components\";\r\n\r\nexport const StyledPeopleContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(208px, 1fr));\r\n  grid-gap: 24px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(136px, 1fr));\r\n    grid-gap: 16px;\r\n  };\r\n`;","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport React from \"react\";\r\nimport PersonTile from \"../PersonTile\";\r\nimport { StyledPeopleContainer } from \"./styled\";\r\n\r\nconst PeopleContainer = ({ people }) => (\r\n  <StyledPeopleContainer>\r\n    {people !== [] ? people.map(person => <PersonTile key={nanoid()} person={person} />)\r\n      : <h1>brak osób do pokazania</h1>}\r\n  </StyledPeopleContainer>\r\n);\r\n\r\nexport default PeopleContainer;","import styled from \"styled-components\";\r\n\r\nexport default styled.h1`\r\n  margin: 56px 0 24px 0;\r\n  font-weight: 600;\r\n  font-size: 36px;\r\n  line-height: 1.2;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin: 24px 0 12px 0;\r\n    font-size: 18px;\r\n  } ;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchMovie, fetchMovieCredits, selectLoading, selectMovie, selectMovieCast, selectMovieCrew } from \"../moviesSlice\";\r\nimport {\r\n  MovieBackdrop,\r\n  MainInfo,\r\n  MovieLongTitle,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRating,\r\n  MovieRatingNote\r\n} from \"./styled\";\r\nimport star from \"../MovieTile/ratingStar.svg\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport MovieDetailsTile from \"./MovieDetailsTile\";\r\nimport PeopleContainer from \"../../people/PeopleContainer\";\r\nimport Header from \"../../../common/Header\";\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const movie = useSelector(selectMovie);\r\n  const loading = useSelector(selectLoading);\r\n  const cast = useSelector(selectMovieCast);\r\n  const crew = useSelector(selectMovieCrew);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(fetchMovie(id));\r\n      dispatch(fetchMovieCredits(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    !loading && movie ?\r\n      <>\r\n        {movie.backdrop_path &&\r\n          <MovieBackdrop src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}>\r\n            <MainInfo>\r\n              <MovieLongTitle>{movie.title}</MovieLongTitle>\r\n              <MovieRating>\r\n                <MovieRatingImg src={star}></MovieRatingImg>\r\n                <MovieRatingNote>{movie.vote_average}</MovieRatingNote>\r\n                <MovieRatingText>/ 10</MovieRatingText>\r\n                <MovieRatingText>{movie.vote_count} votes</MovieRatingText>\r\n              </MovieRating>\r\n            </MainInfo>\r\n          </MovieBackdrop>\r\n        }\r\n        <Wrapper>\r\n          <MovieDetailsTile movie={movie} />\r\n          <Header>Cast</Header>\r\n          <PeopleContainer people={cast} />\r\n          <Header>Crew</Header>\r\n          <PeopleContainer people={crew} />\r\n        </Wrapper>\r\n      </>\r\n      :\r\n      <h1>Trwa ładowanie...</h1>\r\n  )\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledMoviesContainer = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: 24px;\r\n  grid-template-columns: repeat(4, auto);\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: 1fr;\r\n  } ;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledMoviesContainer } from \"./styled\";\r\n\r\nexport const MoviesContainer = (props) => {\r\n  return <StyledMoviesContainer>{props.children}</StyledMoviesContainer>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst MovieTileImg = styled.img`\r\n  width: 292px;\r\n  margin: 0;\r\n  margin-bottom: 16px;\r\n  border-radius: 5px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 34vw;\r\n    min-width: 114px;\r\n    margin: 0;\r\n    margin-right: 16px;\r\n  } ;\r\n`;\r\nconst MovieInfoWrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n`;\r\nconst MovieTileHeader = styled.h2`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  font-weight: 500;\r\n  margin-bottom: 8px;\r\n  font-size: 22px;\r\n  line-height: 130%;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    margin-bottom: 4px;\r\n  } ;\r\n`;\r\nconst MovieTileYear = styled.p`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  margin-bottom: 8px;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 16px;\r\n  } ;\r\n`;\r\nconst MovieTileTags = styled.ul`\r\n  margin: 0;\r\n  padding-left: 0px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin-left: -8px;\r\n  margin-bottom: 45px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 16px;\r\n  } ;\r\n`;\r\nconst MovieTileTag = styled.li`\r\n  background-color: ${({ theme }) => theme.color.grey};\r\n  font-family: Poppins;\r\n  font-size: 14px;\r\n  line-height: 140%;\r\n  border-radius: 5px;\r\n  margin-left: 8px;\r\n  margin-bottom: 8px;\r\n  padding: 8px 16px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 4px 8px;\r\n    font-size: 10px;\r\n    margin-bottom: 8px;\r\n  } ;\r\n`;\r\nconst MovieAdditionalInfo = styled.div`\r\n  margin: 0;\r\n  position: absolute;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    position: relative;\r\n  } ;\r\n`;\r\nconst MovieRatingImg = styled.img`\r\n  width: 24px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 16px;\r\n  } ;\r\n`;\r\nconst MovieRatingText = styled.p`\r\n  margin-right: 12px;\r\n  font-family: Poppins;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  margin: 0 12px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n  } ;\r\n`;\r\nconst MovieRatingVotes = styled.p`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n  } ;\r\n`;\r\n\r\nexport {\r\n  MovieTileImg,\r\n  MovieTileHeader,\r\n  MovieTileYear,\r\n  MovieTileTags,\r\n  MovieTileTag,\r\n  MovieAdditionalInfo,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  MovieInfoWrapper,\r\n};\r\n","import React from \"react\";\r\nimport star from \"./ratingStar.svg\";\r\nimport Tile from \"../../../common/Tile\";\r\nimport Poster from \"../../../images/Poster.svg\"\r\nimport {\r\n  MovieTileImg,\r\n  MovieTileHeader,\r\n  MovieTileYear,\r\n  MovieTileTags,\r\n  MovieTileTag,\r\n  MovieAdditionalInfo,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  MovieInfoWrapper,\r\n} from \"./styled\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toMovie } from \"../../../routes\";\r\n\r\nconst generateTags = (tagNames) => {\r\n  if (tagNames) {\r\n    return tagNames.map((tagName) => {\r\n      return <MovieTileTag key={nanoid()}>{tagName}</MovieTileTag>;\r\n    });\r\n  }\r\n};\r\n\r\nconst MovieTile = (props) => {\r\n  return (\r\n    <Tile as={Link} to={toMovie({ id: props.movie.id })}>\r\n      <MovieTileImg\r\n        src={props.movie.poster_path ? `https://image.tmdb.org/t/p/w400${props.movie.poster_path}` : Poster}\r\n      ></MovieTileImg>\r\n      <MovieInfoWrapper>\r\n        <MovieTileHeader>{props.movie.title}</MovieTileHeader>\r\n        <MovieTileYear>{props.movie.release_date ? props.movie.release_date.slice(0, 4) : \"????\"}</MovieTileYear>\r\n        <MovieTileTags>{generateTags(props.genreNames)}</MovieTileTags>\r\n        <MovieAdditionalInfo>\r\n          <MovieRatingImg src={star}></MovieRatingImg>\r\n          <MovieRatingText>{props.movie.vote_average}</MovieRatingText>\r\n          <MovieRatingVotes>{props.movie.vote_count} votes</MovieRatingVotes>\r\n        </MovieAdditionalInfo>\r\n      </MovieInfoWrapper>\r\n    </Tile>\r\n  );\r\n};\r\n\r\nexport default MovieTile;\r\n","export const getGenreName = (genresId, genres) => {\r\n  const genre = genres.find(genre => genre.id === genresId);\r\n  return genre ? genre.name : \"\";\r\n};","import styled from \"styled-components\"\r\n\r\nexport const PagerWrapper = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\nwidth:fit-content;\r\nmargin:0 auto;\r\nmargin-top:40px;\r\nmargin-bottom: 100px;\r\n`;\r\n\r\nexport const PagerButton = styled.button`\r\ndisplay:flex;\r\nflex-direction:row;\r\nalign-items:center;\r\njustify-content:center;\r\nbackground-color:${({theme}) => theme.color.lightBlue};\r\npadding: 8px 16px;\r\nmargin: 0 12px;\r\noutline:none;\r\nborder:0;\r\nborder-radius: 5px;\r\n&:hover{\r\n    cursor:pointer;\r\n}\r\n&:disabled{\r\n    background-color:${({theme}) => theme.color.grey};\r\n    color: ${({theme}) => theme.color.black}\r\n}\r\n@media(max-width: ${({theme}) => theme.breakpoint.mobileMax}px){\r\n    margin: 0 4px;\r\n    padding: 8px 12px;\r\n}\r\n`;\r\nexport const PagerPrev = styled.img`\r\nwidth:7px;\r\nmargin-right:8px;\r\n@media(max-width: ${({theme}) => theme.breakpoint.mobileMax}px){\r\n    margin: 0 4px;\r\n}\r\n`;\r\nexport const PagerNext = styled.img`\r\nwidth:7px;\r\nmargin-left:8px;\r\n@media(max-width: ${({theme}) => theme.breakpoint.mobileMax}px){\r\n    margin: 0 4px;\r\n}\r\n`;\r\nexport const PagerText = styled.p`\r\nmargin:0;\r\nfont-family: Poppins;\r\nfont-size: 14px;\r\nline-height: 140%;\r\n`;\r\nexport const PagerInfo = styled.p`\r\nmargin:0 24px;\r\nfont-family: Poppins;\r\ncolor: ${({theme}) => theme.color.darkerGrey};\r\nfont-size: 16px;\r\nline-height: 150%;\r\n@media(max-width: ${({theme}) => theme.breakpoint.mobileMax}px){\r\n    margin: 0 4px;\r\n}\r\n`;\r\n\r\nexport const Bold = styled.b`\r\ncolor:${({theme}) => theme.color.black};\r\n`;\r\n","export const theme = {\r\n    color: {\r\n        black: \"#000000\",\r\n        woodsmoke: \"#18181B\",\r\n        blue: \"#0044CC\",\r\n        silver: \"#C4C4C4\",\r\n        lightBlue: \"#D6E4FF\",\r\n        yellow: \"#FCD420\",\r\n        stormGray: \"#74788B\",\r\n        darkerGrey: \"#7E839A\",\r\n        grey: \"#E4E6F0\",\r\n        mercury: \"#E5E5E5\",\r\n        whisper: \"#F5F5FA\",\r\n        white: \"#FFFFFF\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n};","import React from \"react\"\r\nimport Prev from \"./images/Prev.svg\"\r\nimport DisabledPrev from \"./images/DisabledPrev.svg\"\r\nimport Next from \"./images/Next.svg\"\r\nimport DisabledNext from \"./images/DisabledNext.svg\"\r\nimport { PagerButton, PagerNext, PagerPrev, PagerText , PagerInfo , PagerWrapper , Bold } from \"./styled\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { selectCurrentPage, incrementPage,decrementPage, selectAllPages, setPageToFirst, setPageToLast } from \"../features/movies/moviesSlice\";\r\nimport {theme} from \"../theme\";\r\n\r\nexport const Pager = () => {\r\n\r\n    const currentPage = useSelector(selectCurrentPage);\r\n    const allPages = useSelector(selectAllPages);\r\n    const mobileWidth = theme.breakpoint.mobileMax;\r\n    const disablePrevious = currentPage === 1 ? true : false;\r\n    const disableNext = currentPage === allPages ? true : false;\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <PagerWrapper>\r\n            <PagerButton\r\n            onClick={() => {dispatch(setPageToFirst())}}\r\n            disabled={disablePrevious}\r\n            >\r\n                <PagerPrev  src={ disablePrevious ? DisabledPrev :Prev}/>\r\n                {window.innerWidth > mobileWidth ? \r\n                <PagerText>\r\n                    First\r\n                </PagerText>\r\n                : <PagerPrev  src={ disablePrevious ? DisabledPrev :Prev}/>\r\n                }\r\n                \r\n            </PagerButton>\r\n\r\n            <PagerButton\r\n            onClick={() => {dispatch(decrementPage())}}\r\n            disabled={disablePrevious}\r\n            >\r\n                <PagerPrev src={disablePrevious ? DisabledPrev :Prev}/>\r\n                {window.innerWidth > mobileWidth ? \r\n                <PagerText>\r\n                    Previous\r\n                </PagerText>\r\n                : <></>}\r\n            </PagerButton>\r\n\r\n            <PagerInfo>\r\n                Page<Bold> {currentPage} </Bold>\r\n                of<Bold> {allPages} </Bold>\r\n            </PagerInfo>\r\n\r\n            <PagerButton \r\n            onClick={() => {dispatch(incrementPage())}}\r\n            disabled={disableNext}\r\n            >\r\n                {window.innerWidth > mobileWidth ? \r\n                <PagerText>\r\n                   Next\r\n                </PagerText>\r\n                : <></>}\r\n                <PagerNext src={disableNext ? DisabledNext : Next}/>\r\n            </PagerButton>\r\n\r\n            <PagerButton\r\n            onClick={() => {dispatch(setPageToLast())}}\r\n            disabled={disableNext}\r\n            >\r\n                {window.innerWidth > mobileWidth ? \r\n                <PagerText>\r\n                   Last\r\n                </PagerText>\r\n                : <PagerNext src={disableNext ? DisabledNext : Next}/>\r\n                }\r\n                <PagerNext src={disableNext ? DisabledNext : Next}/>\r\n            </PagerButton>\r\n        </PagerWrapper>)\r\n}","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MoviesContainer } from \"../MoviesContainer\";\r\nimport Wrapper from \"../../../common/Wrapper/index\";\r\nimport {\r\n  fetchPopularMovies,\r\n  selectLoading,\r\n  selectMovies,\r\n  fetchGenres,\r\n  selectGenres,\r\n  selectCurrentPage\r\n} from \"../moviesSlice\";\r\nimport MovieTile from \"../MovieTile\";\r\nimport Header from \"../../../common/Header\";\r\nimport { getGenreName } from \"../getGenreName\";\r\nimport { Pager } from \"../../../Pager\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const currentPage = useSelector(selectCurrentPage);\r\n  \r\n  useEffect( () => {\r\n    dispatch(fetchGenres());\r\n  },[dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPopularMovies(currentPage));\r\n  }, [dispatch,currentPage]);\r\n\r\n  const loading = useSelector(selectLoading);\r\n  const movies = useSelector(selectMovies);\r\n  const genres = useSelector(selectGenres);\r\n\r\n  const mapGenreIds = (genreIds, genres) => {\r\n    return genreIds.map((genreId) => {\r\n      return getGenreName(genreId, genres);\r\n    });\r\n  };\r\n\r\n  const generateMovies = (movies) => {\r\n    return movies.map((movie) => {\r\n      const genreNames = mapGenreIds(movie.genre_ids, genres);\r\n      return (\r\n        <MovieTile\r\n          key={movie.id}\r\n          genreNames={genreNames}\r\n          movie={movie}\r\n        ></MovieTile>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!loading && movies) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Wrapper>\r\n          <Header>Popular movies</Header>\r\n          <MoviesContainer>{generateMovies(movies)}</MoviesContainer>\r\n          <Pager></Pager>\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"App\">Trwa ładowanie...</div>;\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DetailsTile = styled.div`\r\n  padding: 40px;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  color: ${({ theme }) => theme.color.black};\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  grid-gap: 40px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 16px;\r\n    grid-gap: 16px;\r\n    grid-template-areas:\r\n      \"image info\"\r\n      \"description description\"\r\n    ;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 399px;\r\n  height: 564px;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 116px;\r\n    height: 163px;\r\n  \r\n  }\r\n`;\r\n\r\nexport const Name = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 36px;\r\n  margin: 8px 0px 24px 0px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 1.3;\r\n    margin: 4px 0px 16px 0px;\r\n  }\r\n`;\r\n\r\nexport const Frame = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  line-height: 120%;\r\n  margin-right: 10px;\r\n  color: ${({ theme }) => theme.color.black};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 12px;\r\n    margin-right: 4px;\r\n  }\r\n`;\r\nexport const GrayText = styled(Text)`\r\n  color: ${({ theme }) => theme.color.stormGray};\r\n`;\r\n\r\nexport const DesktopGrayText = styled(GrayText)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileGrayText = styled(GrayText)`\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Birth = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 8px;\r\n  margin-bottom: 24px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 20px;\r\n  line-height: 1.6;\r\n  margin: 0px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    grid-area: description;\r\n  }\r\n`;\r\n\r\nexport const MobileDescription = styled(Description)`\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopDescription = styled(Description)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DefaultImageContainer = styled.div`\r\n  width: 399px;\r\n  height: 564px;\r\n  border-radius: 5px;\r\n  background: ${({ theme }) => theme.color.silver};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 116px;\r\n    height: 163px;\r\n  }\r\n`;\r\n\r\nexport const DefaultImage = styled.img`\r\n  width: 216px;\r\n  height: 216px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 72px;\r\n    height: 72px;\r\n  }\r\n`;","import React from \"react\";\r\nimport {\r\n  DetailsTile,\r\n  Image,\r\n  Text,\r\n  Birth,\r\n  MobileDescription,\r\n  DesktopDescription,\r\n  DesktopGrayText,\r\n  MobileGrayText,\r\n  GrayText,\r\n  Frame,\r\n  Name,\r\n  DefaultImageContainer,\r\n  DefaultImage,\r\n} from \"./styled\";\r\nimport profile from \"../../../../images/Profile.svg\";\r\n\r\nconst PersonDetailsTile = ({ person }) => (\r\n  <DetailsTile>\r\n    {person.profile_path ?\r\n      <Image src={`https://image.tmdb.org/t/p/h632${person.profile_path}`} alt=\"\" /> :\r\n      <DefaultImageContainer>\r\n        <DefaultImage src={profile} />\r\n      </DefaultImageContainer>\r\n    }\r\n    <section>\r\n      <Name>{person.name}</Name>\r\n      <Birth>\r\n        {person.birthday &&\r\n          <Frame>\r\n            <DesktopGrayText>Date of birth:</DesktopGrayText>\r\n            <MobileGrayText>Birth:</MobileGrayText>\r\n            <Text>{person.birthday.slice(8, 10)}.{person.birthday.slice(5, 7)}.{person.birthday.slice(0, 4)}</Text>\r\n          </Frame>\r\n        }\r\n        {person.place_of_birth &&\r\n          <Frame>\r\n            <GrayText>Place of birth:</GrayText>\r\n            <Text>{person.place_of_birth}</Text>\r\n          </Frame>\r\n        }\r\n      </Birth>\r\n      <DesktopDescription>{person.biography}</DesktopDescription>\r\n    </section>\r\n    <MobileDescription>{person.biography}</MobileDescription>\r\n  </DetailsTile>\r\n);\r\n\r\nexport default PersonDetailsTile;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchPerson, selectLoading, selectPerson } from \"../peopleSlice\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport PersonDetailsTile from \"./PersonDetailsTile\";\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const person = useSelector(selectPerson);\r\n  const loading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPerson(id));\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    !loading && person ?\r\n      <Wrapper>\r\n        <PersonDetailsTile person={person} />\r\n      </Wrapper>\r\n      :\r\n      <h1>Loading...</h1>\r\n  )\r\n};","import React, { useEffect } from \"react\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport Header from \"../../../common/Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPopularPeople, selectLoading, selectPeople } from \"../peopleSlice\";\r\nimport PeopleContainer from \"../PeopleContainer\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const people = useSelector(selectPeople);\r\n  const loading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPopularPeople())\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !loading\r\n      ?\r\n      <Wrapper>\r\n        <Header>Popular people</Header>\r\n        <PeopleContainer people={people} />\r\n      </Wrapper>\r\n      :\r\n      <h1>trwa ładowanie...</h1>\r\n  )\r\n};","import React, { useEffect } from \"react\";\r\nimport Header from \"../../../common/Header\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport { Pager } from \"../../../Pager/index\"\r\nimport { getGenreName } from \"../getGenreName\";\r\nimport { MoviesContainer } from \"../MoviesContainer\";\r\nimport MovieTile from \"../MovieTile\";\r\nconst { useDispatch, useSelector } = require(\"react-redux\");\r\nconst { fetchMoviesByQuery, selectMovies, selectLoading, selectGenres, fetchGenres, selectSearchQuery, selectCurrentPage } = require(\"../moviesSlice\");\r\n\r\nconst MovieListPage = () => {\r\n const dispatch = useDispatch();\r\n const currentPage = useSelector(selectCurrentPage);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchGenres());\r\n    dispatch(fetchMoviesByQuery({query:\"frozen\",page:currentPage}));\r\n  }, [dispatch,currentPage]);\r\n\r\n  const loading = useSelector(selectLoading);\r\n  const movies = useSelector(selectMovies);\r\n  const genres = useSelector(selectGenres);\r\n  const searchQuery = useSelector(selectSearchQuery);\r\n\r\n  const mapGenreIds = (genreIds, genres) => {\r\n    return genreIds.map((genreId) => {\r\n      return getGenreName(genreId, genres);\r\n    });\r\n  };\r\n\r\n  const generateMovies = (movies) => {\r\n    return movies.map((movie) => {\r\n      const genreNames = mapGenreIds(movie.genre_ids, genres);\r\n      return (\r\n        <MovieTile\r\n          key={movie.id}\r\n          genreNames={genreNames}\r\n          movie={movie}\r\n        ></MovieTile>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Wrapper>\r\n          <Header>Search results for \"{searchQuery.query}\"</Header>\r\n          <MoviesContainer>{generateMovies(movies.results)}</MoviesContainer>\r\n          <Pager></Pager>\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"App\">Trwa ładowanie...</div>;\r\n  }\r\n};\r\n\r\nexport default MovieListPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Label = styled.label`\r\n  width: 432px;\r\n  height: 48px;\r\n  border-radius: 33px;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  border: 1px solid ${({ theme }) => theme.color.grey};\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: auto\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  margin: 0 15px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: none;\r\n  border: none;\r\n  font-size: 16px;\r\n  flex-grow: 0.8;\r\n`;\r\n","import React from \"react\";\r\nimport searchIcon from \"../../images/searchIcon.svg\";\r\nimport { Label, Icon, Input } from \"./styled\";\r\n\r\nconst Search = () => {\r\n  return (\r\n    <Label>\r\n      <Icon src={searchIcon} />\r\n      <Input placeholder=\"Search for movies...\" />\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst activeClassName = \"link-active\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.color.woodsmoke};\r\n`;\r\n\r\nexport const NavigationStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  height: 40px;\r\n  width: 40px;\r\n  margin-right: 12px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 17px;\r\n    height: 17px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: ${({ theme }) => theme.color.white};\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  line-height: 40px;\r\n  letter-spacing: -1.5px;\r\n  display: flex;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n    letter-spacing: -0.5px;\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nexport const NavigationList = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const NavigationItem = styled.li`\r\n  border: 1px solid transparent;\r\n  flex-grow: 0;\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink).attrs(() => ({ activeClassName }))`\r\n  &.${activeClassName} {\r\n    border: 1px solid ${({ theme }) => theme.color.white};\r\n    border-radius: 24px;\r\n  }\r\n  \r\n  padding: 13.5px 24px;\r\n  color: ${({ theme }) => theme.color.white};\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    padding: 8px 12px;\r\n\r\n    &.${activeClassName} {\r\n      border-radius: 29px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;","import React from \"react\";\r\nimport Search from \"../features/search\";\r\nimport camera from \"../images/camera.svg\";\r\nimport {\r\n  Container,\r\n  NavigationStyle,\r\n  NavigationItem,\r\n  NavigationList,\r\n  Title,\r\n  Icon,\r\n  StyledLink,\r\n  Logo,\r\n} from \"./styled\";\r\nimport { toMovies, toPeople } from \"../routes\";\r\nimport Wrapper from \"../common/Wrapper\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <NavigationStyle>\r\n          <Logo>\r\n            <Icon src={camera} />\r\n            <Title>Movies Browser</Title>\r\n          </Logo>\r\n          <NavigationList>\r\n            <NavigationItem>\r\n              <StyledLink to={toMovies()}>Movies</StyledLink>\r\n            </NavigationItem>\r\n            <NavigationItem>\r\n              <StyledLink to={toPeople()}>People</StyledLink>\r\n            </NavigationItem>\r\n          </NavigationList>\r\n          <Search />\r\n        </NavigationStyle>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { toMovie, toMovieList, toMovies, toPeople, toPerson } from \"./routes\";\r\nimport MoviePage from \"./features/movies/MoviePage\";\r\nimport MoviesPage from \"./features/movies/MoviesPage\";\r\nimport PersonPage from \"./features/people/PersonPage\";\r\nimport PeoplePage from \"./features/people/PeoplePage\";\r\nimport MovieListPage from \"./features/movies/MovieListPage\";\r\nimport Navigation from \"./Navigation/index\";\r\n\r\nexport default () => (\r\n  <HashRouter>\r\n    <Navigation />\r\n    <Switch>\r\n      <Route path={toMovie()}>\r\n        <MoviePage />\r\n      </Route>\r\n      <Route path={toMovies()}>\r\n        <MoviesPage />\r\n      </Route>\r\n      <Route path={toPerson()}>\r\n        <PersonPage />\r\n      </Route>\r\n      <Route path={toPeople()}>\r\n        <PeoplePage />\r\n      </Route>\r\n      <Route path={toMovieList()}>\r\n        <MovieListPage />\r\n      </Route>\r\n      <Route>\r\n        <Redirect to={toMovies()} />\r\n      </Route>\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Poppins', sans-serif;\r\n        background: ${({ theme }) => theme.color.whisper};\r\n        margin: 0;\r\n    }\r\n`;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst moviesSlice = createSlice({\r\n  name: \"movies\",\r\n  initialState: {\r\n    loading: true,\r\n    movies: [],\r\n    genres: [],\r\n    movie: {},\r\n    movieCast: [],\r\n    movieCrew: [],\r\n    searchQuery: \"\",\r\n    currentPage:1,\r\n    allPages:1,\r\n  },\r\n  reducers: {\r\n    setPageToFirst: (state) => {\r\n      state.currentPage = 1;\r\n    },\r\n    setPageToLast: (state) => {\r\n      state.currentPage = state.allPages;\r\n    },\r\n    incrementPage: (state) => {\r\n      state.currentPage += 1;\r\n    },\r\n    decrementPage: (state) => {\r\n      state.currentPage -= 1;\r\n    },\r\n    fetchPopularMovies: (state) => {\r\n      state.loading = true;\r\n      state.movies = [];\r\n    },\r\n    fetchPopularMoviesSuccess: (state, { payload: movies }) => {\r\n      state.movies = movies.results;\r\n      state.allPages = movies.total_pages;\r\n      state.loading = false;\r\n    },\r\n    fetchPopularMoviesError: (state) => {\r\n      state.loading = false;\r\n      state.movies = [];\r\n    },\r\n    fetchGenres: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchGenresSuccess: (state, { payload: genres }) => {\r\n      state.genres = genres;\r\n      state.loading = true;\r\n    },\r\n    fetchGenresError: (state) => {\r\n      state.loading = false;\r\n    },\r\n    fetchMovie: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchMovieSuccess: (state, { payload: movie }) => {\r\n      state.movie = movie;\r\n      state.loading = false;\r\n    },\r\n    fetchMovieError: (state) => {\r\n      state.loading = false;\r\n    },\r\n    fetchMoviesByQuery: (state, { payload: query }) => {\r\n      state.searchQuery = query;\r\n      state.loading = true;\r\n    },\r\n    fetchMoviesByQuerySuccess: (state, { payload: movies }) => {\r\n      state.movies = movies;\r\n      state.allPages = movies.total_pages;\r\n      state.loading = false;\r\n    },\r\n    fetchMoviesByQueryError: (state) => {\r\n      state.loading = false;\r\n    },\r\n    fetchMovieCredits: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchMovieCreditsSuccess: (state, { payload: credits }) => {\r\n      state.movieCast = credits.cast;\r\n      state.movieCrew = credits.crew;\r\n      state.loading = false;\r\n    },\r\n    fetchMovieCreditsError: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectMoviesState = (state) => state.movies;\r\nexport const selectLoading = (state) => selectMoviesState(state).loading;\r\nexport const selectMovies = (state) => selectMoviesState(state).movies;\r\nexport const selectMovie = (state) => selectMoviesState(state).movie;\r\nexport const selectGenres = (state) => selectMoviesState(state).genres;\r\nexport const selectSearchQuery = (state) => selectMoviesState(state).searchQuery;\r\nexport const selectCurrentPage = (state) => selectMoviesState(state).currentPage;\r\nexport const selectAllPages = (state) => selectMoviesState(state).allPages;\r\nexport const selectMovieCast = (state) => selectMoviesState(state).movieCast;\r\nexport const selectMovieCrew = (state) => selectMoviesState(state).movieCrew;\r\n\r\nexport const {\r\n  setPageToFirst,\r\n  setPageToLast,\r\n  incrementPage,\r\n  decrementPage,\r\n  fetchPopularMovies,\r\n  fetchPopularMoviesError,\r\n  fetchPopularMoviesSuccess,\r\n  fetchGenres,\r\n  fetchGenresError,\r\n  fetchGenresSuccess,\r\n  fetchMovie,\r\n  fetchMovieError,\r\n  fetchMovieSuccess,\r\n  fetchMoviesByQuery,\r\n  fetchMoviesByQuerySuccess,\r\n  fetchMoviesByQueryError,\r\n  fetchMovieCredits,\r\n  fetchMovieCreditsError,\r\n  fetchMovieCreditsSuccess,\r\n} = moviesSlice.actions;\r\nexport default moviesSlice.reducer;\r\n"],"sourceRoot":""}