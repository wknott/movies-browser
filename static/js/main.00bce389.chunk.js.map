{"version":3,"sources":["features/movies/MovieTile/ratingStar.svg","images/Poster.svg","images/Profile.svg","features/people/peopleSlice.js","features/movies/api.js","features/movies/moviesSaga.js","features/people/api.js","features/people/peopleSaga.js","rootSaga.js","store.js","routes.js","features/movies/MoviePage/styled.js","common/Wrapper/index.js","features/movies/MoviePage/MovieDetailsTile/styled.js","features/movies/MoviePage/MovieDetailsTile/index.js","features/movies/MoviePage/index.js","features/movies/MoviesContainer/styled.js","features/movies/MoviesContainer/index.js","common/Tile/index.js","features/movies/MovieTile/styled.js","features/movies/MovieTile/index.js","common/Header/index.js","features/movies/getGenreName.js","features/movies/MoviesPage/index.js","features/people/PersonPage/PersonDetailsTile/styled.js","features/people/PersonPage/PersonDetailsTile/index.js","features/people/PersonPage/index.js","features/people/PersonTile/styled.js","features/people/PersonTile/index.js","features/people/PeopleContainer/styled.js","features/people/PeopleContainer/index.js","features/people/PeoplePage/index.js","features/movies/MovieListPage/index.js","App.js","serviceWorker.js","GlobalStyle.js","index.js","theme.js","features/movies/moviesSlice.js"],"names":["module","exports","peopleSlice","createSlice","name","initialState","loading","people","person","reducers","fetchPopularPeople","state","fetchPopularPeopleSuccess","payload","fetchPopularPeopleError","fetchPerson","fetchPersonSuccess","fetchPersonError","selectPeopleState","selectLoading","selectPeople","selectPerson","actions","getPopularMovies","a","fetch","process","response","ok","Error","statusText","json","popularMovies","results","getMovieDetails","movieId","movieDetails","getMoviesByQuery","query","console","log","movies","getGenres","data","genres","fetchPopularMoviesHandler","fetchGenresHandler","fetchMoviesByQueryHandler","fetchMovieHandler","watchFetchPopularMovies","call","put","fetchPopularMoviesSuccess","alert","fetchPopularMoviesError","fetchGenresSuccess","fetchGenresError","fetchMoviesByQuerySuccess","fetchMoviesByQueryError","movie","fetchMovieSuccess","fetchMovieError","takeLatest","fetchMoviesByQuery","type","fetchPopularMovies","fetchGenres","fetchMovie","getPopularPeople","popularPeople","getPersonDetails","personId","personDetails","fetchPopularPeopleHandler","fetchPersonHandler","watchFetchPopularPeople","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","moviesReducer","peopleReducer","middleware","run","toMovie","id","toPerson","styled","require","default","MovieBackdrop","div","theme","color","black","white","src","breakpoint","mobileMax","MainInfo","MovieLongTitle","h1","MovieRating","MovieRatingImg","img","MovieRatingNote","p","MovieRatingText","DetailsTile","Image","Name","Frame","Text","GrayText","stormGray","DesktopGrayText","Birth","Description","MobileDescription","DesktopDescription","ProductionYear","Tags","ul","Tag","li","grey","MovieRatingVotes","darkerGrey","DesktopMovieRatingVotes","Rating","MovieDetailsTile","poster_path","poster","alt","original_title","release_date","slice","production_countries","map","country","join","genre","key","star","vote_average","vote_count","overview","useParams","useSelector","selectMovie","dispatch","useDispatch","useEffect","backdrop_path","title","Wrapper","StyledMoviesContainer","MoviesContainer","props","children","MovieTileImg","MovieInfoWrapper","MovieTileHeader","h2","MovieTileYear","MovieTileTags","MovieTileTag","MovieAdditionalInfo","MovieTile","Tile","Poster","tagNames","tagName","nanoid","generateTags","genreNames","getGenreName","genresId","find","selectMovies","selectGenres","className","Header","genreIds","genreId","mapGenreIds","genre_ids","generateMovies","MobileGrayText","PersonDetailsTile","profile_path","birthday","place_of_birth","biography","StyledPersonTile","PersonImage","silver","PersonName","PersonTile","profile","StyledPeopleContainer","PeopleContainer","selectSearchQuery","MovieListPage","path","MoviePage","MoviesPage","PersonPage","PeoplePage","to","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","mercury","ReactDOM","render","StrictMode","blue","lightBlue","yellow","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","moviesSlice","searchQuery","selectMoviesState"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,uDCA3CD,EAAOC,QAAU,IAA0B,qC,2GCErCC,EAAcC,YAAY,CAC9BC,KAAM,SACNC,aAAc,CACZC,SAAS,EACTC,OAAQ,GACRC,OAAQ,IAEVC,SAAU,CACRC,mBAAoB,SAACC,GACnBA,EAAML,SAAU,EAChBK,EAAMJ,OAAS,IAEjBK,0BAA2B,SAACD,EAAD,GAAiC,IAAdJ,EAAa,EAAtBM,QACnCF,EAAMJ,OAASA,EACfI,EAAML,SAAU,GAElBQ,wBAAyB,SAACH,GACxBA,EAAML,SAAU,EAChBK,EAAMJ,OAAS,IAEjBQ,YAAa,SAACJ,GACZA,EAAML,SAAU,GAElBU,mBAAoB,SAACL,EAAD,GAAiC,IAAdH,EAAa,EAAtBK,QAC5BF,EAAMH,OAASA,EACfG,EAAML,SAAU,GAElBW,iBAAkB,SAACN,GACjBA,EAAML,SAAU,MAKTY,EAAoB,SAAAP,GAAK,OAAIA,EAAMJ,QACnCY,EAAgB,SAAAR,GAAK,OAAIO,EAAkBP,GAAOL,SAClDc,EAAe,SAAAT,GAAK,OAAIO,EAAkBP,GAAOJ,QACjDc,EAAe,SAAAV,GAAK,OAAIO,EAAkBP,GAAOH,Q,EAS1DN,EAAYoB,QANdZ,E,EAAAA,mBACAI,E,EAAAA,wBACAF,E,EAAAA,0BACAG,E,EAAAA,YACAE,E,EAAAA,iBACAD,E,EAAAA,mBAGad,IAAf,Q,+BCjDaqB,EAAgB,uCAAG,8BAAAC,EAAA,sEACPC,MAAM,sDAAD,OAC4BC,qCAF1B,cACxBC,EADwB,QAKhBC,IACZ,IAAIC,MAAMF,EAASG,YANS,SASFH,EAASI,OATP,cASxBC,EATwB,yBAWvBA,EAAcC,SAXS,2CAAH,qDAchBC,EAAe,uCAAG,WAAOC,GAAP,iBAAAX,EAAA,sEACNC,MAAM,sCAAD,OACYU,EADZ,oBAC+BT,qCAF9B,cACvBC,EADuB,QAKfC,IACZ,IAAIC,MAAMF,EAASG,YANQ,SASFH,EAASI,OATP,cASvBK,EATuB,yBAWtBA,GAXsB,2CAAH,sDA2BfC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAd,EAAA,sEACPC,MAAM,qDAAD,OAC2BC,mCAD3B,iCACiFY,EADjF,YADE,cACxBX,EADwB,OAK9BY,QAAQC,IAAIb,GAEPA,EAASC,IACd,IAAIC,MAAMF,EAASG,YARW,SAUTH,EAASI,OAVA,cAUxBU,EAVwB,yBAYvBA,GAZuB,2CAAH,sDAehBC,EAAS,uCAAG,8BAAAlB,EAAA,sEACAC,MAAM,yDAAD,OAC+BC,qCAFpC,cACjBC,EADiB,QAKTC,IACZ,IAAIC,MAAMF,EAASG,YANE,SASJH,EAASI,OATL,cASjBY,EATiB,yBAWhBA,EAAKC,QAXW,2CAAH,qD,WCrCZC,G,WAUAC,G,WASAC,G,WAUAC,G,WAUOC,GAvCjB,SAAUJ,IAAV,uEAE0B,OAF1B,kBAEgCK,YAAK3B,GAFrC,OAGI,OADMS,EAFV,gBAGUmB,YAAIC,oCAA0BpB,IAHxC,8BAKI,OALJ,mCAKUkB,YAAKG,MAAO,sEALtB,QAMI,OANJ,UAMUF,YAAIG,qCANd,qDAUA,SAAUR,IAAV,uEAE0B,OAF1B,kBAEgCI,YAAKR,GAFrC,OAGI,OADMV,EAFV,gBAGUmB,YAAII,6BAAmBvB,IAHjC,8BAKI,OALJ,mCAKUkB,YAAKG,MAAO,sEALtB,QAMI,OANJ,UAMUF,YAAIK,8BANd,qDASA,SAAUT,EAAV,4EAEmB,OAF4BT,EAA/C,EAAqCzB,QAArC,kBAEyBqC,YAAKb,EAAiBC,GAF/C,OAGI,OADMG,EAFV,gBAGUU,YAAIM,oCAA0BhB,IAHxC,8BAKI,OALJ,mCAKUS,YAAKG,MAAO,sEALtB,QAMI,OANJ,UAMUF,YAAIO,qCANd,qDAUA,SAAUV,EAAV,4EAEkB,OAFqBb,EAAvC,EAA8BtB,QAA9B,kBAEwBqC,YAAKhB,EAAiBC,GAF9C,OAGI,OADMwB,EAFV,gBAGUR,YAAIS,4BAAkBD,IAHhC,8BAKI,OALJ,mCAKUT,YAAKG,MAAO,sEALtB,QAMI,OANJ,UAMUF,YAAIU,6BANd,qDAUO,SAAUZ,IAAV,iEACL,OADK,SACCa,YAAWC,qBAAmBC,KAAMjB,GADrC,OAEL,OAFK,SAECe,YAAWG,qBAAmBD,KAAMnB,GAFrC,OAGL,OAHK,SAGCiB,YAAWI,cAAYF,KAAMlB,GAH9B,OAIL,OAJK,SAICgB,YAAWK,aAAWH,KAAMhB,GAJ7B,uCC1DA,IAAMoB,EAAgB,uCAAG,8BAAA5C,EAAA,sEACPC,MAAM,uDAAD,OAC6BC,qCAF3B,cACxBC,EADwB,QAIhBC,IACZ,IAAIC,MAAMF,EAASG,YALS,SAOFH,EAASI,OAPP,cAOxBsC,EAPwB,yBASvBA,EAAcpC,SATS,2CAAH,qDAYhBqC,EAAgB,uCAAG,WAAOC,GAAP,iBAAA/C,EAAA,sEACPC,MAAM,uCAAD,OACa8C,EADb,oBACiC7C,qCAF/B,cACxBC,EADwB,QAIhBC,IACZ,IAAIC,MAAMF,EAASG,YALS,SAOFH,EAASI,OAPP,cAOxByC,EAPwB,yBASvBA,GATuB,2CAAH,sD,WCDnBC,G,WAUAC,G,WAUOC,GApBjB,SAAUF,IAAV,uEAE0B,OAF1B,kBAEgCvB,YAAKkB,GAFrC,OAGI,OADMC,EAFV,gBAGUlB,YAAIvC,EAA0ByD,IAHxC,8BAKI,OALJ,mCAKUnB,YAAKG,MAAO,sEALtB,QAMI,OANJ,UAMUF,YAAIrC,KANd,qDAUA,SAAU4D,EAAV,4EAEmB,OAFqBH,EAAxC,EAA+B1D,QAA/B,kBAEyBqC,YAAKoB,EAAkBC,GAFhD,OAGI,OADM/D,EAFV,gBAGU2C,YAAInC,EAAmBR,IAHjC,8BAKI,OALJ,mCAKU0C,YAAKG,MAAO,KAAQ,sEAL9B,QAMI,OANJ,UAMUF,YAAIlC,KANd,qDAUO,SAAU0D,IAAV,iEACL,OADK,SACCb,YAAWpD,EAAmBsD,KAAMS,GADrC,OAEL,OAFK,SAECX,YAAW/C,EAAYiD,KAAMU,GAF9B,uC,eC3BkBE,GAAV,SAAUA,IAAV,iEACb,OADa,SACPC,YAAI,CACR5B,IACA0B,MAHW,uCCEf,IAAMG,EAAiBC,cAEjBC,EAAQC,YAAe,CAC3BC,QAAS,CACPzC,OAAQ0C,UACR5E,OAAQ6E,GAEVC,WAAY,CAACP,KAGfA,EAAeQ,IAAIV,GAEJI,S,kBClBFO,GAAU,wEAAU,CAAEC,GAAI,OAAbA,EAAH,EAAGA,GAAH,wBAAuCA,IAEjDC,GAAW,wEAAU,CAAED,GAAI,OAAbA,EAAH,EAAGA,GAAH,wBAAuCA,I,qlFCF9CE,GAAWC,EAAQ,GAA5BC,QAEKC,GAAgBH,GAAOI,IAAV,MACJ,qBAAGC,MAAkBC,MAAMC,SACtC,qBAAGF,MAAkBC,MAAME,SAM9B,qBAAGC,OAKY,qBAAGJ,MAAkBK,WAAWC,aAK1CC,GAAWZ,GAAOI,IAAV,MASE,qBAAGC,MAAkBK,WAAWC,aAO1CE,GAAiBb,GAAOc,GAAV,MAKJ,qBAAGT,MAAkBK,WAAWC,aAK1CI,GAAcf,GAAOI,IAAV,MAQXY,GAAiBhB,GAAOiB,IAAV,MAEJ,qBAAGZ,MAAkBK,WAAWC,aAK1CO,GAAkBlB,GAAOmB,EAAV,MAML,qBAAGd,MAAkBK,WAAWC,aAM1CS,GAAkBpB,GAAOmB,EAAV,MAMjB,qBAAGd,MAAkBC,MAAME,SAEf,qBAAGH,MAAkBK,WAAWC,a,8OC/ExCX,kBAAOI,IAAtB,MAIuB,qBAAGC,MAAkBK,WAAWC,a,o3ICJhD,IAAMU,GAAcrB,WAAOI,IAAV,MAEF,qBAAGC,MAAkBC,MAAME,SACtC,qBAAGH,MAAkBC,MAAMC,SAKf,qBAAGF,MAAkBK,WAAWC,aAU1CW,GAAQtB,WAAOiB,IAAV,MAKK,qBAAGZ,MAAkBK,WAAWC,aAM1CY,GAAOvB,WAAOc,GAAV,MAKM,qBAAGT,MAAkBK,WAAWC,aAS1Ca,GAAQxB,WAAOI,IAAV,MAKLqB,GAAOzB,WAAOmB,EAAV,MAKN,qBAAGd,MAAkBC,MAAMC,SAIf,qBAAGF,MAAkBK,WAAWC,aAK1Ce,GAAW1B,mBAAOyB,GAAPzB,CAAH,MACV,qBAAGK,MAAkBC,MAAMqB,aAGzBC,GAAkB5B,mBAAO0B,GAAP1B,CAAH,MACL,qBAAGK,MAAkBK,WAAWC,aAW1CkB,IANiB7B,mBAAO0B,GAAP1B,CAAH,MACJ,qBAAGK,MAAkBK,WAAWC,aAKlCX,WAAOI,IAAV,MAMK,qBAAGC,MAAkBK,WAAWC,cAK1CmB,GAAc9B,WAAOmB,EAAV,MAKD,qBAAGd,MAAkBK,WAAWC,aAM1CoB,GAAoB/B,mBAAO8B,GAAP9B,CAAH,MACP,qBAAGK,MAAkBK,WAAWC,aAK1CqB,GAAqBhC,mBAAO8B,GAAP9B,CAAH,MACR,qBAAGK,MAAkBK,WAAWC,aAK1CsB,GAAiBjC,WAAOmB,EAAV,MAMJ,qBAAGd,MAAkBK,WAAWC,aAQ1CuB,GAAOlC,WAAOmC,GAAV,MAQM,qBAAG9B,MAAkBK,WAAWC,aAM1CyB,GAAMpC,WAAOqC,GAAV,MACM,qBAAGhC,MAAkBC,MAAMgC,QAQ1B,qBAAGjC,MAAkBK,WAAWC,aAS1CK,GAAiBhB,WAAOiB,IAAV,MAEJ,qBAAGZ,MAAkBK,WAAWC,aAK1CS,GAAkBpB,WAAOmB,EAAV,MAKL,qBAAGd,MAAkBK,WAAWC,aAO1C4B,GAAmBvC,WAAOmB,EAAV,MAKlB,qBAAGd,MAAkBC,MAAMkC,cAIf,qBAAGnC,MAAkBK,WAAWC,aAQ1C8B,GAA0BzC,mBAAOuC,GAAPvC,CAAH,MACb,qBAAGK,MAAkBK,WAAWC,aAK1C+B,GAAS1C,WAAOI,IAAV,MAKI,qBAAGC,MAAkBK,WAAWC,a,oBCxJxCgC,GAhCU,SAAC,GAAD,IAAG1E,EAAH,EAAGA,MAAH,OACvB,kBAACoD,GAAD,KACE,kBAACC,GAAD,CAAOb,IAAKxC,EAAM2E,YAAN,yCAAsD3E,EAAM2E,aAAgBC,KAAQC,IAAI,KACpG,iCACE,kBAAC,GAAD,KAAQ7E,EAAM8E,gBACd,kBAACd,GAAD,KAAiBhE,EAAM+E,aAAaC,MAAM,EAAG,IAC7C,kBAAC,GAAD,KACE,kBAACzB,GAAD,KACE,kBAACI,GAAD,oBACA,kBAACH,GAAD,KAAOxD,EAAMiF,qBAAqBC,KAAI,SAAAC,GAAO,OAAIA,EAAQ1I,QAAM2I,KAAK,QAEtE,kBAAC7B,GAAD,KACE,kBAACI,GAAD,sBACA,kBAACH,GAAD,KAAOxD,EAAM+E,aAAaC,MAAM,EAAG,IAAnC,IAAyChF,EAAM+E,aAAaC,MAAM,EAAG,GAArE,IAA0EhF,EAAM+E,aAAaC,MAAM,EAAG,MAG1G,kBAACf,GAAD,KACGjE,EAAMf,OAAOiG,KAAI,SAAAG,GAAK,OACrB,kBAAClB,GAAD,CAAKmB,IAAKD,EAAMxD,IAAKwD,EAAM5I,UAE/B,kBAACgI,GAAD,KACE,kBAAC,GAAD,CAAgBjC,IAAK+C,OACrB,kBAAC,GAAD,KAAkBvF,EAAMwF,cACxB,kBAAChB,GAAD,aACA,kBAACF,GAAD,KAAmBtE,EAAMyF,WAAzB,WAEF,kBAAC1B,GAAD,KAAqB/D,EAAM0F,WAE7B,kBAAC5B,GAAD,KAAoB9D,EAAM0F,YClCf,cAAO,IACZ7D,EAAO8D,eAAP9D,GACF7B,EAAQ4F,sBAAYC,eACpBlJ,EAAUiJ,sBAAYpI,iBACtBsI,EAAWC,wBAQjB,OANAC,qBAAU,WACJnE,GACFiE,EAAStF,qBAAWqB,MAErB,CAACiE,EAAUjE,KAGXlF,GAAWqD,EACV,oCACE,kBAACkC,GAAD,CAAeM,IAAG,6CAAwCxC,EAAMiG,gBAC9D,kBAACtD,GAAD,KACE,kBAACC,GAAD,KAAiB5C,EAAMkG,OACvB,kBAACpD,GAAD,KACE,kBAACC,GAAD,CAAgBP,IAAK+C,OACrB,kBAACtC,GAAD,KAAkBjD,EAAMwF,cACxB,kBAACrC,GAAD,aACA,kBAACA,GAAD,KAAkBnD,EAAMyF,WAAxB,aAIN,kBAACU,GAAD,KACE,kBAAC,GAAD,CAAkBnG,MAAOA,MAI7B,uD,iPC9CC,IAAMoG,GAAwBrE,WAAOI,IAAV,MAKX,qBAAGC,MAAkBK,WAAWC,aCJ1C2D,GAAkB,SAACC,GAC9B,OAAO,kBAACF,GAAD,KAAwBE,EAAMC,W,oYCFxBxE,kBAAOI,IAAtB,MAOsB,qBAAGC,MAAkBC,MAAME,SAE1B,qBAAGH,MAAkBK,WAAWC,a,g9ECTvD,IAAM8D,GAAezE,WAAOiB,IAAV,MAKK,qBAAGZ,MAAkBK,WAAWC,aAOjD+D,GAAmB1E,WAAOI,IAAV,MAKhBuE,GAAkB3E,WAAO4E,GAAV,MAOE,qBAAGvE,MAAkBK,WAAWC,aAKjDkE,GAAgB7E,WAAOmB,EAAV,MAMR,qBAAGd,MAAkBC,MAAMkC,cACf,qBAAGnC,MAAkBK,WAAWC,aAIjDmE,GAAgB9E,WAAOmC,GAAV,MAQI,qBAAG9B,MAAkBK,WAAWC,aAIjDoE,GAAe/E,WAAOqC,GAAV,MACI,qBAAGhC,MAAkBC,MAAMgC,QAQ1B,qBAAGjC,MAAkBK,WAAWC,aAMjDqE,GAAsBhF,WAAOI,IAAV,MAMF,qBAAGC,MAAkBK,WAAWC,aAIjDK,GAAiBhB,WAAOiB,IAAV,MAEG,qBAAGZ,MAAkBK,WAAWC,aAIjDS,GAAkBpB,WAAOmB,EAAV,MAOE,qBAAGd,MAAkBK,WAAWC,aAKjD4B,GAAmBvC,WAAOmB,EAAV,MAKX,qBAAGd,MAAkBC,MAAMkC,cACf,qBAAGnC,MAAkBK,WAAWC,aCzDxCsE,GApBG,SAACV,GACjB,OACE,kBAACW,GAAD,KACE,kBAACT,GAAD,CACEhE,IAAO8D,EAAMtG,MAAM2E,YAAZ,yCAA4D2B,EAAMtG,MAAM2E,aAAiBuC,OAElG,kBAACT,GAAD,KACE,kBAACC,GAAD,KAAkBJ,EAAMtG,MAAMkG,OAC9B,kBAACU,GAAD,KAAgBN,EAAMtG,MAAM+E,aAAeuB,EAAMtG,MAAM+E,aAAaC,MAAM,EAAE,GAAK,QACjF,kBAAC6B,GAAD,KAjBa,SAACM,GACpB,GAAIA,EACF,OAAOA,EAASjC,KAAI,SAACkC,GACnB,OAAO,kBAACN,GAAD,CAAcxB,IAAK+B,eAAWD,MAcnBE,CAAahB,EAAMiB,aACnC,kBAACR,GAAD,KACE,kBAAC,GAAD,CAAgBvE,IAAK+C,OACrB,kBAAC,GAAD,KAAkBe,EAAMtG,MAAMwF,cAC9B,kBAAC,GAAD,KAAmBc,EAAMtG,MAAMyF,WAA/B,c,4PCrCK1D,kBAAOc,GAAtB,MAMuB,qBAAGT,MAAkBK,WAAWC,aCR1C8E,GAAe,SAACC,EAAUxI,GACrC,IAAMoG,EAAQpG,EAAOyI,MAAK,SAAArC,GAAK,OAAIA,EAAMxD,KAAO4F,KAChD,OAAOpC,EAAQA,EAAM5I,KAAO,ICcf,cACb,IAAMqJ,EAAWC,wBAEjBC,qBAAU,WACRF,EAASvF,yBACTuF,EAASxF,kCACR,CAACwF,IAEJ,IAAMnJ,EAAUiJ,sBAAYpI,iBACtBsB,EAAS8G,sBAAY+B,gBACrB1I,EAAS2G,sBAAYgC,gBAqB3B,OAAKjL,EAUI,yBAAKkL,UAAU,OAAf,0BARL,yBAAKA,UAAU,OACb,kBAAC1B,GAAD,KACE,kBAAC2B,GAAD,uBACA,kBAAC,GAAD,KAlBe,SAAChJ,GACtB,OAAOA,EAAOoG,KAAI,SAAClF,GACjB,IAAMuH,EARU,SAACQ,EAAU9I,GAC7B,OAAO8I,EAAS7C,KAAI,SAAC8C,GACnB,OAAOR,GAAaQ,EAAS/I,MAMVgJ,CAAYjI,EAAMkI,UAAWjJ,GAChD,OACE,kBAAC,GAAD,CACEqG,IAAKtF,EAAM6B,GACX0F,WAAYA,EACZvH,MAAOA,OAWWmI,CAAerJ,O,gvEClDpC,IAAMsE,GAAcrB,WAAOI,IAAV,MAEF,qBAAGC,MAAkBC,MAAME,SACtC,qBAAGH,MAAkBC,MAAMC,SAKf,qBAAGF,MAAkBK,WAAWC,aAU1CW,GAAQtB,WAAOiB,IAAV,MAKK,qBAAGZ,MAAkBK,WAAWC,aAO1CY,GAAOvB,WAAOc,GAAV,MAKM,qBAAGT,MAAkBK,WAAWC,aAQ1Ca,GAAQxB,WAAOI,IAAV,MAKLqB,GAAOzB,WAAOmB,EAAV,MAKN,qBAAGd,MAAkBC,MAAMC,SAEf,qBAAGF,MAAkBK,WAAWC,aAK1Ce,GAAW1B,mBAAOyB,GAAPzB,CAAH,MACV,qBAAGK,MAAkBC,MAAMqB,aAGzBC,GAAkB5B,mBAAO0B,GAAP1B,CAAH,MACL,qBAAGK,MAAkBK,WAAWC,aAK1C0F,GAAiBrG,mBAAO0B,GAAP1B,CAAH,MACJ,qBAAGK,MAAkBK,WAAWC,aAK1CkB,GAAQ7B,WAAOI,IAAV,MAMK,qBAAGC,MAAkBK,WAAWC,aAK1CmB,GAAc9B,WAAOmB,EAAV,MAKD,qBAAGd,MAAkBK,WAAWC,aAM1CoB,GAAoB/B,mBAAO8B,GAAP9B,CAAH,MACP,qBAAGK,MAAkBK,WAAWC,aAK1CqB,GAAqBhC,mBAAO8B,GAAP9B,CAAH,MACR,qBAAGK,MAAkBK,WAAWC,aCtExC2F,GAtBW,SAAC,GAAD,IAAGxL,EAAH,EAAGA,OAAH,OACxB,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO2F,IAAG,yCAAoC3F,EAAOyL,cAAgBzD,IAAI,KACzE,iCACE,kBAAC,GAAD,KAAOhI,EAAOJ,MACd,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,uBACA,kBAAC,GAAD,eACA,kBAAC,GAAD,KAAOI,EAAO0L,SAASvD,MAAM,EAAG,IAAhC,IAAsCnI,EAAO0L,SAASvD,MAAM,EAAG,GAA/D,IAAoEnI,EAAO0L,SAASvD,MAAM,EAAG,KAE/F,kBAAC,GAAD,KACE,kBAAC,GAAD,wBACA,kBAAC,GAAD,KAAOnI,EAAO2L,kBAGlB,kBAAC,GAAD,KAAqB3L,EAAO4L,YAE9B,kBAAC,GAAD,KAAoB5L,EAAO4L,aC1BhB,cAAO,IACZ5G,EAAO8D,eAAP9D,GACFiE,EAAWC,wBACXlJ,EAAS+I,sBAAYlI,GACrBf,EAAUiJ,sBAAYpI,GAM5B,OAJAwI,qBAAU,WACRF,EAAS1I,EAAYyE,MACpB,CAACiE,EAAUjE,KAGXlF,GAAWE,EACV,kBAACsJ,GAAD,KACE,kBAAC,GAAD,CAAmBtJ,OAAQA,KAG7B,2C,2qBCpBC,IAAM6L,GAAmB3G,mBAAOkF,GAAPlF,CAAH,MAGN,qBAAGK,MAAkBK,WAAWC,aAO1CiG,GAAc5G,WAAOiB,IAAV,MAIR,qBAAGZ,MAAkBC,MAAMuG,UAEpB,qBAAGxG,MAAkBK,WAAWC,aAK1CmG,GAAa9G,WAAO4E,GAAV,MAOA,qBAAGvE,MAAkBK,WAAWC,aCpBxCoG,I,MAPI,SAAC,GAAD,IAAGjM,EAAH,EAAGA,OAAH,OACjB,kBAAC6L,GAAD,KACE,kBAACC,GAAD,CAAanG,IAAK,yCAAkC3F,EAAOyL,gBAAkBS,IAC7E,kBAACF,GAAD,KAAahM,EAAOJ,S,+SCLjB,IAAMuM,GAAwBjH,WAAOI,IAAV,MAKX,qBAAGC,MAAkBK,WAAWC,aCIxCuG,GAPS,SAAC,GAAD,IAAGrM,EAAH,EAAGA,OAAH,OACtB,kBAACoM,GAAD,KACGpM,IAAW,GAAKA,EAAOsI,KAAI,SAAArI,GAAM,OAAI,kBAAC,GAAD,CAAYyI,IAAKzI,EAAOgF,GAAIhF,OAAQA,OACtE,2DCAO,cACb,IAAMiJ,EAAWC,wBACXnJ,EAASgJ,sBAAYnI,GACrBd,EAAUiJ,sBAAYpI,GAM5B,OAJAwI,qBAAU,WACRF,EAAS/I,OACR,CAAC+I,IAGDnJ,EAOC,sDALA,kBAACwJ,GAAD,KACE,kBAAC2B,GAAD,uBACA,kBAAC,GAAD,CAAiBlL,OAAQA,M,GCfIoF,EAAQ,IAArC+D,G,GAAAA,YAAaH,G,GAAAA,Y,GACqF5D,EAAQ,GAA1G5B,G,GAAAA,mBAAoBuH,G,GAAAA,aAAcnK,G,GAAAA,cAAeoK,G,GAAAA,aAAcrH,G,GAAAA,YAAa2I,G,GAAAA,kBAgDrEC,GA9CO,WACrB,IAAMrD,EAAWC,KAEhBC,qBAAU,WACRF,EAASvF,MACTuF,EAAS1F,GAAmB,aAC3B,CAAC0F,IAEJ,IAAMnJ,EAAUiJ,GAAYpI,IACtBsB,EAAS8G,GAAY+B,IACrB1I,EAAS2G,GAAYgC,IACrBjJ,EAAQiH,GAAYsD,IAqB1B,OAAKvM,EAUI,yBAAKkL,UAAU,OAAf,0BARL,yBAAKA,UAAU,OACb,kBAAC1B,GAAD,KACA,kBAAC2B,GAAD,4BAA6BnJ,EAA7B,KACE,kBAAC,GAAD,KAlBe,SAACG,GACtB,OAAOA,EAAOoG,KAAI,SAAClF,GACjB,IAAMuH,EARU,SAACQ,EAAU9I,GAC7B,OAAO8I,EAAS7C,KAAI,SAAC8C,GACnB,OAAOR,GAAaQ,EAAS/I,MAMVgJ,CAAYjI,EAAMkI,UAAWjJ,GAChD,OACE,kBAAC,GAAD,CACEqG,IAAKtF,EAAM6B,GACX0F,WAAYA,EACZvH,MAAOA,OAWWmI,CAAerJ,EAAOR,aCrCnC,qBACb,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO8K,KAAMxH,MACX,kBAACyH,GAAD,OAEF,kBAAC,KAAD,CAAOD,KvBdiB,WuBetB,kBAACE,GAAD,OAEF,kBAAC,KAAD,CAAOF,KAAMtH,MACX,kBAACyH,GAAD,OAEF,kBAAC,KAAD,CAAOH,KvBlBiB,WuBmBtB,kBAACI,GAAD,OAEF,kBAAC,KAAD,CAAOJ,KvBpBoB,cuBqBzB,kBAAC,GAAD,OAEF,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAUK,GvB3BY,gBwBWVC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iTChBC,IAAMC,GAAcC,6BAAH,MAWF,qBAAG5H,MAAkBC,MAAM4H,WCHjDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,WAAD,CAAU/I,MAAOA,IACf,kBAAC,iBAAD,CAAee,MCbA,CACjBC,MAAO,CACHC,MAAO,UACP+H,KAAM,UACNzB,OAAQ,UACR0B,UAAW,UACXC,OAAQ,UACR7G,UAAW,UACXa,WAAY,UACZF,KAAM,UACN4F,QAAS,UACT1H,MAAO,WAEXE,WAAY,CACRC,UAAW,ODAX,kBAACqH,GAAD,MACA,kBAACS,GAAD,SAINC,SAASC,eAAe,SFgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtM,QAAQsM,MAAMA,EAAMC,a,+BIzI5B,k5BAEMC,EAAc5O,YAAY,CAC9BC,KAAM,SACNC,aAAc,CACZC,SAAS,EACTmC,OAAQ,GACRG,OAAQ,GACRe,MAAO,GACPqL,YAAa,IAEfvO,SAAU,CACRwD,mBAAoB,SAACtD,GACnBA,EAAML,SAAU,EAChBK,EAAM8B,OAAS,IAEjBW,0BAA2B,SAACzC,EAAD,GAAiC,IAAd8B,EAAa,EAAtB5B,QACnCF,EAAM8B,OAASA,EACf9B,EAAML,SAAU,GAElBgD,wBAAyB,SAAC3C,GACxBA,EAAML,SAAU,EAChBK,EAAM8B,OAAS,IAEjByB,YAAa,SAACvD,GACZA,EAAML,SAAU,GAElBiD,mBAAoB,SAAC5C,EAAD,GAAiC,IAAdiC,EAAa,EAAtB/B,QAC5BF,EAAMiC,OAASA,EACfjC,EAAML,SAAU,GAElBkD,iBAAkB,SAAC7C,GACjBA,EAAML,SAAU,GAElB6D,WAAY,SAACxD,GACXA,EAAML,SAAU,GAElBsD,kBAAmB,SAACjD,EAAD,GAAgC,IAAbgD,EAAY,EAArB9C,QAC3BF,EAAMgD,MAAQA,EACdhD,EAAML,SAAU,GAElBuD,gBAAiB,SAAClD,GAChBA,EAAML,SAAU,GAElByD,mBAAoB,SAACpD,EAAD,GAAgC,IAAb2B,EAAY,EAArBzB,QAC5BF,EAAMqO,YAAc1M,EACpB3B,EAAML,SAAU,GAElBmD,0BAA2B,SAAC9C,EAAD,GAAiC,IAAd8B,EAAa,EAAtB5B,QACnCF,EAAM8B,OAASA,EACf9B,EAAML,SAAU,GAElBoD,wBAAyB,SAAC/C,GACxBA,EAAML,SAAU,MAKT2O,EAAoB,SAACtO,GAAD,OAAWA,EAAM8B,QACrCtB,EAAgB,SAACR,GAAD,OAAWsO,EAAkBtO,GAAOL,SACpDgL,EAAe,SAAC3K,GAAD,OAAWsO,EAAkBtO,GAAO8B,QACnD+G,EAAc,SAAC7I,GAAD,OAAWsO,EAAkBtO,GAAOgD,OAClD4H,EAAe,SAAC5K,GAAD,OAAWsO,EAAkBtO,GAAOiC,QACnDiK,EAAoB,SAAClM,GAAD,OAAWsO,EAAkBtO,GAAOqO,a,EAejED,EAAYzN,QAZd2C,E,EAAAA,mBACAX,E,EAAAA,wBACAF,E,EAAAA,0BACAc,E,EAAAA,YACAV,E,EAAAA,iBACAD,E,EAAAA,mBACAY,E,EAAAA,WACAN,E,EAAAA,gBACAD,E,EAAAA,kBACAG,E,EAAAA,mBACAN,E,EAAAA,0BACAC,E,EAAAA,wBAEaqL,YAAf,U","file":"static/js/main.00bce389.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ratingStar.b489e613.svg\";","module.exports = __webpack_public_path__ + \"static/media/Poster.8fb01e35.svg\";","module.exports = __webpack_public_path__ + \"static/media/Profile.345aaccb.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst peopleSlice = createSlice({\r\n  name: \"people\",\r\n  initialState: {\r\n    loading: true,\r\n    people: [],\r\n    person: {},\r\n  },\r\n  reducers: {\r\n    fetchPopularPeople: (state) => {\r\n      state.loading = true;\r\n      state.people = [];\r\n    },\r\n    fetchPopularPeopleSuccess: (state, { payload: people }) => {\r\n      state.people = people;\r\n      state.loading = false;\r\n    },\r\n    fetchPopularPeopleError: (state) => {\r\n      state.loading = false;\r\n      state.people = [];\r\n    },\r\n    fetchPerson: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchPersonSuccess: (state, { payload: person }) => {\r\n      state.person = person;\r\n      state.loading = false;\r\n    },\r\n    fetchPersonError: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectPeopleState = state => state.people;\r\nexport const selectLoading = state => selectPeopleState(state).loading;\r\nexport const selectPeople = state => selectPeopleState(state).people;\r\nexport const selectPerson = state => selectPeopleState(state).person;\r\n\r\nexport const {\r\n  fetchPopularPeople,\r\n  fetchPopularPeopleError,\r\n  fetchPopularPeopleSuccess,\r\n  fetchPerson,\r\n  fetchPersonError,\r\n  fetchPersonSuccess,\r\n} = peopleSlice.actions;\r\n\r\nexport default peopleSlice.reducer;\r\n","export const getPopularMovies = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const popularMovies = await response.json();\r\n\r\n  return popularMovies.results;\r\n};\r\n\r\nexport const getMovieDetails = async (movieId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const movieDetails = await response.json();\r\n\r\n  return movieDetails;\r\n};\r\n\r\nexport const getMovieCredits = async (movieId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const movieCredits = await response.json();\r\n\r\n  return movieCredits;\r\n};\r\nexport const getMoviesByQuery = async (query) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${query}&page=1`\r\n  );\r\n  \r\n  console.log(response);\r\n\r\n  if (!response.ok) {\r\n  new Error(response.statusText);\r\n  }\r\n  const movies = await response.json();\r\n\r\n  return movies;\r\n};\r\n\r\nexport const getGenres = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  return data.genres;\r\n};\r\n","import { takeLatest, call, put } from \"redux-saga/effects\";\r\n\r\nimport { getGenres, getMovieDetails, getMoviesByQuery, getPopularMovies } from \"./api\";\r\n\r\nimport {\r\n  fetchPopularMovies,\r\n  fetchPopularMoviesError,\r\n  fetchPopularMoviesSuccess,\r\n  fetchGenres,\r\n  fetchGenresError,\r\n  fetchGenresSuccess,\r\n  fetchMovie,\r\n  fetchMovieSuccess,\r\n  fetchMovieError,\r\n  fetchMoviesByQuery,\r\n  fetchMoviesByQuerySuccess,\r\n  fetchMoviesByQueryError,\r\n} from \"./moviesSlice\";\r\n\r\nfunction* fetchPopularMoviesHandler() {\r\n  try {\r\n    const popularMovies = yield call(getPopularMovies);\r\n    yield put(fetchPopularMoviesSuccess(popularMovies));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchPopularMoviesError());\r\n  }\r\n}\r\n\r\nfunction* fetchGenresHandler() {\r\n  try {\r\n    const popularMovies = yield call(getGenres);\r\n    yield put(fetchGenresSuccess(popularMovies));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchGenresError());\r\n  }\r\n}\r\nfunction* fetchMoviesByQueryHandler({payload : query}) {\r\n  try {\r\n    const movies = yield call(getMoviesByQuery,query);\r\n    yield put(fetchMoviesByQuerySuccess(movies));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchMoviesByQueryError());\r\n  }\r\n}\r\n\r\nfunction* fetchMovieHandler({ payload: movieId }) {\r\n  try {\r\n    const movie = yield call(getMovieDetails, movieId);\r\n    yield put(fetchMovieSuccess(movie));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchMovieError());\r\n  }\r\n};\r\n\r\nexport function* watchFetchPopularMovies() {\r\n  yield takeLatest(fetchMoviesByQuery.type, fetchMoviesByQueryHandler);\r\n  yield takeLatest(fetchPopularMovies.type, fetchPopularMoviesHandler);\r\n  yield takeLatest(fetchGenres.type, fetchGenresHandler);\r\n  yield takeLatest(fetchMovie.type, fetchMovieHandler);\r\n};\r\n","export const getPopularPeople = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n  const popularPeople = await response.json();\r\n\r\n  return popularPeople.results;\r\n};\r\n\r\nexport const getPersonDetails = async (personId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/${personId}?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n  const personDetails = await response.json();\r\n\r\n  return personDetails;\r\n};\r\n\r\nexport const getPersonMovieCredits = async (personId) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${process.env.REACT_APP_API_KEY}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  };\r\n\r\n  const PersonMovieCredits = await response.json();\r\n\r\n  return PersonMovieCredits;\r\n}; ","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport { getPersonDetails, getPopularPeople } from \"./api\";\r\nimport {\r\n  fetchPerson,\r\n  fetchPersonError,\r\n  fetchPersonSuccess,\r\n  fetchPopularPeople,\r\n  fetchPopularPeopleError,\r\n  fetchPopularPeopleSuccess,\r\n} from \"./peopleSlice\";\r\n\r\nfunction* fetchPopularPeopleHandler() {\r\n  try {\r\n    const popularPeople = yield call(getPopularPeople);\r\n    yield put(fetchPopularPeopleSuccess(popularPeople));\r\n  } catch (error) {\r\n    yield call(alert, \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchPopularPeopleError());\r\n  }\r\n};\r\n\r\nfunction* fetchPersonHandler({ payload: personId }) {\r\n  try {\r\n    const person = yield call(getPersonDetails, personId);\r\n    yield put(fetchPersonSuccess(person));\r\n  } catch (error) {\r\n    yield call(alert, error + \"Coś poszło nie tak! Spróbuj ponownie później.\");\r\n    yield put(fetchPersonError());\r\n  }\r\n};\r\n\r\nexport function* watchFetchPopularPeople() {\r\n  yield takeLatest(fetchPopularPeople.type, fetchPopularPeopleHandler);\r\n  yield takeLatest(fetchPerson.type, fetchPersonHandler);\r\n};\r\n","import { all } from \"redux-saga/effects\";\r\nimport { watchFetchPopularMovies } from \"./features/movies/moviesSaga\";\r\nimport { watchFetchPopularPeople } from \"./features/people/peopleSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchFetchPopularMovies(),\r\n    watchFetchPopularPeople(),\r\n  ]);\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport moviesReducer from \"./features/movies/moviesSlice\";\r\nimport peopleReducer from \"./features/people/peopleSlice\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    movies: moviesReducer,\r\n    people: peopleReducer,\r\n  },\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","export const toMovie = ({ id } = { id: \":id\" }) => `/movies/${id}`;\r\nexport const toMovies = () => \"/movies\";\r\nexport const toPerson = ({ id } = { id: \":id\" }) => `/people/${id}`;\r\nexport const toPeople = () => \"/people\";\r\nexport const toMovieList = () => \"/movieList\";\r\n","const { default: styled } = require(\"styled-components\");\r\n\r\nexport const MovieBackdrop = styled.div`\r\n  background-color: ${({ theme }) => theme.color.black};\r\n  color: ${({ theme }) => theme.color.white};\r\n  background-image: \r\n  linear-gradient(270deg, #000000 14.11%, rgba(0, 0, 0, 0.873268) 15.08%, rgba(0, 0, 0, 0.720529) 16.51%, rgba(0, 0, 0, 0.294577) 19.99%, rgba(0, 0, 0, 0.159921) 21.88%, rgba(0, 0, 0, 0) 25.68%), \r\n  linear-gradient(90deg, #000000 13.6%, rgba(0, 0, 0, 0.984059) 14.58%, rgba(0, 0, 0, 0.967732) 15.44%, rgba(0, 0, 0, 0.865569) 16.3%, rgba(0, 0, 0, 0.230315) 22.87%, rgba(0, 0, 0, 0) 26.64%), \r\n  linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0.689555) 4.66%, rgba(0, 0, 0, 0.439033) 9.34%, rgba(0, 0, 0, 0.20628) 15.16%, rgba(0, 0, 0, 0) 24.22%), \r\n  linear-gradient(189.44deg, rgba(0, 0, 0, 0) 58.48%, rgba(0, 0, 0, 0.106473) 63.17%, rgba(0, 0, 0, 0.235359) 68.85%, rgba(0, 0, 0, 0.492821) 78.08%, rgba(0, 0, 0, 0.740286) 85.86%, #000000 92.87%), \r\n  url(${({ src }) => src});\r\n  background-size: 1920px 770px, 1920px 770px, 1920px 770px, 1920px 770px, 1368px 769px;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    background-size: 350px 148px, 350px 148px, 350px 148px, 350px 148px, 262px 148px;\r\n  }\r\n`;\r\n\r\nexport const MainInfo = styled.div`\r\n  padding-bottom: 56px;\r\n  margin: 0 auto;\r\n  width: 1368px;\r\n  height: 770px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 320px;\r\n    height: 148px;\r\n    padding: 8px 16px;\r\n  }\r\n`;\r\n\r\nexport const MovieLongTitle = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 64px;\r\n  margin: 0px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nexport const MovieRating = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const MovieRatingImg = styled.img`\r\n  width: 40px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 16px;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingNote = styled.p`\r\n  font-weight: 500;\r\n  font-size: 30px;\r\n  line-height: 1.3;\r\n  align-self: center;\r\n  margin: 0px 8px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingText = styled.p`\r\n  margin: 0px;\r\n  font-size: 16px;\r\n  line-height: 1.2;\r\n  align-self: center;\r\n  margin-top: 16px;\r\n  color: ${({ theme }) => theme.color.white};\r\n  flex-basis: 90%;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 10px;\r\n    margin-top: 0px;\r\n    margin-right: 8px;\r\n    flex-basis: unset;\r\n  } ;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  max-width: 1368px;\r\n  margin: 0 auto;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: calc(100vw - 32px);\r\n    margin: 0 auto;\r\n  } ;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const DetailsTile = styled.div`\r\n  padding: 40px;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  color: ${({ theme }) => theme.color.black};\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  grid-gap: 40px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 16px;\r\n    grid-gap: 16px;\r\n    grid-template-areas:\r\n      \"image info\"\r\n      \"description description\"\r\n    ;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 312px;\r\n  height: 464px;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 114px;\r\n    height: 169px;\r\n  }\r\n`;\r\n\r\nexport const Name = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 36px;\r\n  margin: 8px 0px 24px 0px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 130%;\r\n    margin: 0px 0px 4px 0px;\r\n  }\r\n`;\r\n\r\nexport const Frame = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  line-height: 120%;\r\n  margin-right: 10px;\r\n  color: ${({ theme }) => theme.color.black};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 12px;\r\n    margin-right: 4px;\r\n  }\r\n`;\r\nexport const GrayText = styled(Text)`\r\n  color: ${({ theme }) => theme.color.stormGray};\r\n`;\r\n\r\nexport const DesktopGrayText = styled(GrayText)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileGrayText = styled(GrayText)`\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Birth = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 8px;\r\n  margin: 0px 0px 24px 0px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 20px;\r\n  line-height: 1.6;\r\n  margin: 0px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    grid-area: description;\r\n  }\r\n`;\r\n\r\nexport const MobileDescription = styled(Description)`\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopDescription = styled(Description)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ProductionYear = styled.p`\r\n  margin: 0px 0px 24px 0px;\r\n  font-size: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-weight: normal;\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const Tags = styled.ul`\r\n  margin: 0;\r\n  padding-left: 0px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin-left: -16px;\r\n  margin-bottom: 8px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 4px;\r\n    margin-left: -8px;\r\n  } ;\r\n`;\r\n\r\nexport const Tag = styled.li`\r\n  background-color: ${({ theme }) => theme.color.grey};\r\n  font-size: 14px;\r\n  line-height: 1;\r\n  font-weight: normal;\r\n  border-radius: 5px;\r\n  margin: 0px 0px 16px 16px;\r\n  padding: 8px 16px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 4px 8px;\r\n    font-style: normal;\r\n    font-size: 10px;\r\n    line-height: 110%;\r\n    margin: 0px 0px 8px 8px;\r\n  };\r\n`;\r\n\r\nexport const MovieRatingImg = styled.img`\r\n  width: 24px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 16px;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingText = styled.p`\r\n  font-weight: 500;\r\n  font-size: 22px;\r\n  line-height: 130%;\r\n  margin: 0 8px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n    font-weight: 600;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRatingVotes = styled.p`\r\n  margin: 0;\r\n  font-size: 14px;\r\n  line-height: 120%;\r\n  align-self: flex-end;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  margin-right: 12px;\r\n  margin-bottom: 3px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n    margin: 0;\r\n  };\r\n`;\r\nexport const DesktopMovieRatingVotes = styled(MovieRatingVotes)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Rating = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 24px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;","import React from \"react\";\r\nimport {\r\n  DetailsTile,\r\n  Image,\r\n  ProductionYear,\r\n  Text,\r\n  Birth as ProductionAndRelease,\r\n  MobileDescription,\r\n  DesktopDescription,\r\n  DesktopGrayText,\r\n  Frame,\r\n  Name as Title,\r\n  Tags,\r\n  Tag,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  Rating,\r\n  DesktopMovieRatingVotes,\r\n} from \"./styled\";\r\nimport star from \"../../MovieTile/ratingStar.svg\";\r\nimport poster from \"../../../../images/Poster.svg\";\r\n\r\nconst MovieDetailsTile = ({ movie }) => (\r\n  <DetailsTile>\r\n    <Image src={movie.poster_path ? `https://image.tmdb.org/t/p/w342${movie.poster_path}` : poster} alt=\"\" />\r\n    <section>\r\n      <Title>{movie.original_title}</Title>\r\n      <ProductionYear>{movie.release_date.slice(0, 4)}</ProductionYear>\r\n      <ProductionAndRelease>\r\n        <Frame>\r\n          <DesktopGrayText>Production:</DesktopGrayText>\r\n          <Text>{movie.production_countries.map(country => country.name).join(\", \")}</Text>\r\n        </Frame>\r\n        <Frame>\r\n          <DesktopGrayText>Release date:</DesktopGrayText>\r\n          <Text>{movie.release_date.slice(8, 10)}.{movie.release_date.slice(5, 7)}.{movie.release_date.slice(0, 4)}</Text>\r\n        </Frame>\r\n      </ProductionAndRelease>\r\n      <Tags>\r\n        {movie.genres.map(genre =>\r\n          <Tag key={genre.id}>{genre.name}</Tag>)}\r\n      </Tags>\r\n      <Rating>\r\n        <MovieRatingImg src={star}></MovieRatingImg>\r\n        <MovieRatingText>{movie.vote_average}</MovieRatingText>\r\n        <DesktopMovieRatingVotes>/ 10</DesktopMovieRatingVotes>\r\n        <MovieRatingVotes>{movie.vote_count} votes</MovieRatingVotes>\r\n      </Rating>\r\n      <DesktopDescription>{movie.overview}</DesktopDescription>\r\n    </section>\r\n    <MobileDescription>{movie.overview}</MobileDescription>\r\n  </DetailsTile>\r\n);\r\n\r\nexport default MovieDetailsTile;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchMovie, selectLoading, selectMovie } from \"../moviesSlice\";\r\nimport {\r\n  MovieBackdrop,\r\n  MainInfo,\r\n  MovieLongTitle,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRating,\r\n  MovieRatingNote\r\n} from \"./styled\";\r\nimport star from \"../MovieTile/ratingStar.svg\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport MovieDetailsTile from \"./MovieDetailsTile\";\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const movie = useSelector(selectMovie);\r\n  const loading = useSelector(selectLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(fetchMovie(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    !loading && movie ?\r\n      <>\r\n        <MovieBackdrop src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}>\r\n          <MainInfo>\r\n            <MovieLongTitle>{movie.title}</MovieLongTitle>\r\n            <MovieRating>\r\n              <MovieRatingImg src={star}></MovieRatingImg>\r\n              <MovieRatingNote>{movie.vote_average}</MovieRatingNote>\r\n              <MovieRatingText>/ 10</MovieRatingText>\r\n              <MovieRatingText>{movie.vote_count} votes</MovieRatingText>\r\n            </MovieRating>\r\n          </MainInfo>\r\n        </MovieBackdrop>\r\n        <Wrapper>\r\n          <MovieDetailsTile movie={movie} />\r\n        </Wrapper>\r\n      </>\r\n      :\r\n      <h1>Trwa ładowanie...</h1>\r\n  )\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledMoviesContainer = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: 24px;\r\n  grid-template-columns: repeat(4, auto);\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: 1fr;\r\n  } ;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledMoviesContainer } from \"./styled\";\r\n\r\nexport const MoviesContainer = (props) => {\r\n  return <StyledMoviesContainer>{props.children}</StyledMoviesContainer>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  padding: 16px;\r\n  box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\r\n  border-radius: 5px;\r\n  display: grid;\r\n  grid-template-columns: auto;\r\n  grid-template-rows: auto 1fr;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: auto 1fr;\r\n    grid-template-rows: auto;\r\n  };\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst MovieTileImg = styled.img`\r\n  width: 292px;\r\n  margin: 0;\r\n  margin-bottom: 16px;\r\n  border-radius: 5px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 34vw;\r\n    min-width: 114px;\r\n    margin: 0;\r\n    margin-right: 16px;\r\n  } ;\r\n`;\r\nconst MovieInfoWrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n`;\r\nconst MovieTileHeader = styled.h2`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  font-weight: 500;\r\n  margin-bottom: 8px;\r\n  font-size: 22px;\r\n  line-height: 130%;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    margin-bottom: 4px;\r\n  } ;\r\n`;\r\nconst MovieTileYear = styled.p`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  margin-bottom: 8px;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 16px;\r\n  } ;\r\n`;\r\nconst MovieTileTags = styled.ul`\r\n  margin: 0;\r\n  padding-left: 0px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin-left: -8px;\r\n  margin-bottom: 45px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 16px;\r\n  } ;\r\n`;\r\nconst MovieTileTag = styled.li`\r\n  background-color: ${({ theme }) => theme.color.grey};\r\n  font-family: Poppins;\r\n  font-size: 14px;\r\n  line-height: 140%;\r\n  border-radius: 5px;\r\n  margin-left: 8px;\r\n  margin-bottom: 8px;\r\n  padding: 8px 16px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 4px 8px;\r\n    font-size: 10px;\r\n    margin-bottom: 8px;\r\n  } ;\r\n`;\r\nconst MovieAdditionalInfo = styled.div`\r\n  margin: 0;\r\n  position: absolute;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    position: relative;\r\n  } ;\r\n`;\r\nconst MovieRatingImg = styled.img`\r\n  width: 24px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 16px;\r\n  } ;\r\n`;\r\nconst MovieRatingText = styled.p`\r\n  margin-right: 12px;\r\n  font-family: Poppins;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  margin: 0 12px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n  } ;\r\n`;\r\nconst MovieRatingVotes = styled.p`\r\n  margin: 0;\r\n  font-family: Poppins;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: ${({ theme }) => theme.color.darkerGrey};\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 13px;\r\n    line-height: 130%;\r\n  } ;\r\n`;\r\n\r\nexport {\r\n  MovieTileImg,\r\n  MovieTileHeader,\r\n  MovieTileYear,\r\n  MovieTileTags,\r\n  MovieTileTag,\r\n  MovieAdditionalInfo,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  MovieInfoWrapper,\r\n};\r\n","import React from \"react\";\r\nimport star from \"./ratingStar.svg\";\r\nimport Tile from \"../../../common/Tile\";\r\nimport Poster from \"../../../images/Poster.svg\"\r\nimport {\r\n  MovieTileImg,\r\n  MovieTileHeader,\r\n  MovieTileYear,\r\n  MovieTileTags,\r\n  MovieTileTag,\r\n  MovieAdditionalInfo,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  MovieInfoWrapper,\r\n} from \"./styled\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst generateTags = (tagNames) => {\r\n  if (tagNames) {\r\n    return tagNames.map((tagName) => {\r\n      return <MovieTileTag key={nanoid()}>{tagName}</MovieTileTag>;\r\n    });\r\n  }\r\n};\r\n\r\nconst MovieTile = (props) => {\r\n  return (\r\n    <Tile>\r\n      <MovieTileImg\r\n        src= { props.movie.poster_path ? `https://image.tmdb.org/t/p/w400${props.movie.poster_path}` :  Poster}\r\n      ></MovieTileImg>\r\n      <MovieInfoWrapper>\r\n        <MovieTileHeader>{props.movie.title}</MovieTileHeader>\r\n        <MovieTileYear>{props.movie.release_date ? props.movie.release_date.slice(0,4) : \"????\"}</MovieTileYear>\r\n        <MovieTileTags>{generateTags(props.genreNames)}</MovieTileTags>\r\n        <MovieAdditionalInfo>\r\n          <MovieRatingImg src={star}></MovieRatingImg>\r\n          <MovieRatingText>{props.movie.vote_average}</MovieRatingText>\r\n          <MovieRatingVotes>{props.movie.vote_count} votes</MovieRatingVotes>\r\n        </MovieAdditionalInfo>\r\n      </MovieInfoWrapper>\r\n    </Tile>\r\n  );\r\n};\r\n\r\nexport default MovieTile;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.h1`\r\n  margin: 56px 0 24px 0;\r\n  font-weight: 600;\r\n  font-size: 36px;\r\n  line-height: 1.2;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin: 24px 0 12px 0;\r\n    font-size: 18px;\r\n  } ;\r\n`;\r\n","export const getGenreName = (genresId, genres) => {\r\n  const genre = genres.find(genre => genre.id === genresId);\r\n  return genre ? genre.name : \"\";\r\n};","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MoviesContainer } from \"../MoviesContainer\";\r\nimport Wrapper from \"../../../common/Wrapper/index\";\r\nimport {\r\n  fetchPopularMovies,\r\n  selectLoading,\r\n  selectMovies,\r\n  fetchGenres,\r\n  selectGenres,\r\n} from \"../moviesSlice\";\r\nimport MovieTile from \"../MovieTile\";\r\nimport Header from \"../../../common/Header\";\r\nimport { getGenreName } from \"../getGenreName\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchGenres());\r\n    dispatch(fetchPopularMovies());\r\n  }, [dispatch]);\r\n\r\n  const loading = useSelector(selectLoading);\r\n  const movies = useSelector(selectMovies);\r\n  const genres = useSelector(selectGenres);\r\n\r\n  const mapGenreIds = (genreIds, genres) => {\r\n    return genreIds.map((genreId) => {\r\n      return getGenreName(genreId, genres);\r\n    });\r\n  };\r\n\r\n  const generateMovies = (movies) => {\r\n    return movies.map((movie) => {\r\n      const genreNames = mapGenreIds(movie.genre_ids, genres);\r\n      return (\r\n        <MovieTile\r\n          key={movie.id}\r\n          genreNames={genreNames}\r\n          movie={movie}\r\n        ></MovieTile>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Wrapper>\r\n          <Header>Popular movies</Header>\r\n          <MoviesContainer>{generateMovies(movies)}</MoviesContainer>\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"App\">Trwa ładowanie...</div>;\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DetailsTile = styled.div`\r\n  padding: 40px;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  color: ${({ theme }) => theme.color.black};\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  grid-gap: 40px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 16px;\r\n    grid-gap: 16px;\r\n    grid-template-areas:\r\n      \"image info\"\r\n      \"description description\"\r\n    ;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 399px;\r\n  height: 564px;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 116px;\r\n    height: 163px;\r\n  \r\n  }\r\n`;\r\n\r\nexport const Name = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 36px;\r\n  margin: 8px 0px 24px 0px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 1.3;\r\n    margin: 4px 0px 16px 0px;\r\n  }\r\n`;\r\n\r\nexport const Frame = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  line-height: 120%;\r\n  margin-right: 10px;\r\n  color: ${({ theme }) => theme.color.black};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 12px;\r\n    margin-right: 4px;\r\n  }\r\n`;\r\nexport const GrayText = styled(Text)`\r\n  color: ${({ theme }) => theme.color.stormGray};\r\n`;\r\n\r\nexport const DesktopGrayText = styled(GrayText)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileGrayText = styled(GrayText)`\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Birth = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 8px;\r\n  margin-bottom: 24px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 20px;\r\n  line-height: 1.6;\r\n  margin: 0px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    grid-area: description;\r\n  }\r\n`;\r\n\r\nexport const MobileDescription = styled(Description)`\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopDescription = styled(Description)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: none;\r\n  }\r\n`;","import React from \"react\";\r\nimport {\r\n  DetailsTile,\r\n  Image,\r\n  Text,\r\n  Birth,\r\n  MobileDescription,\r\n  DesktopDescription,\r\n  DesktopGrayText,\r\n  MobileGrayText,\r\n  GrayText,\r\n  Frame,\r\n  Name\r\n} from \"./styled\";\r\n\r\nconst PersonDetailsTile = ({ person }) => (\r\n  <DetailsTile>\r\n    <Image src={`https://image.tmdb.org/t/p/h632${person.profile_path}`} alt=\"\" />\r\n    <section>\r\n      <Name>{person.name}</Name>\r\n      <Birth>\r\n        <Frame>\r\n          <DesktopGrayText>Date of birth:</DesktopGrayText>\r\n          <MobileGrayText>Birth:</MobileGrayText>\r\n          <Text>{person.birthday.slice(8, 10)}.{person.birthday.slice(5, 7)}.{person.birthday.slice(0, 4)}</Text>\r\n        </Frame>\r\n        <Frame>\r\n          <GrayText>Place of birth:</GrayText>\r\n          <Text>{person.place_of_birth}</Text>\r\n        </Frame>\r\n      </Birth>\r\n      <DesktopDescription>{person.biography}</DesktopDescription>\r\n    </section>\r\n    <MobileDescription>{person.biography}</MobileDescription>\r\n  </DetailsTile>\r\n);\r\n\r\nexport default PersonDetailsTile;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchPerson, selectLoading, selectPerson } from \"../peopleSlice\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport PersonDetailsTile from \"./PersonDetailsTile\";\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const person = useSelector(selectPerson);\r\n  const loading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPerson(id));\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    !loading && person ?\r\n      <Wrapper>\r\n        <PersonDetailsTile person={person} />\r\n      </Wrapper>\r\n      :\r\n      <h1>Loading...</h1>\r\n  )\r\n};","import styled from \"styled-components\";\r\nimport Tile from \"../../../common/Tile\";\r\n\r\nexport const StyledPersonTile = styled(Tile)`\r\n  grid-gap: 12px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 8px;\r\n    grid-template-columns: auto;\r\n    grid-gap: 8px;\r\n  };\r\n`;\r\n\r\nexport const PersonImage = styled.img`\r\n  margin: 0 auto;\r\n  width: 176px;\r\n  border-radius: 5px;\r\n  background: ${({ theme }) => theme.color.silver};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    width: 120px;\r\n  };\r\n`;\r\n\r\nexport const PersonName = styled.h2`\r\n  font-weight: 500;\r\n  font-size: 22px;\r\n  line-height: 1.3;\r\n  text-align: center;\r\n  margin: 0 0 8px 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    margin-bottom: 7px;\r\n  };\r\n`;","import React from \"react\";\r\nimport { StyledPersonTile, PersonImage, PersonName } from \"./styled\";\r\nimport profile from \"../../../images/Profile.svg\";\r\n\r\nconst PersonTile = ({ person }) => (\r\n  <StyledPersonTile>\r\n    <PersonImage src={`https://image.tmdb.org/t/p/w185${person.profile_path}` || profile} />\r\n    <PersonName>{person.name}</PersonName>\r\n  </StyledPersonTile>\r\n);\r\n\r\nexport default PersonTile;","import styled from \"styled-components\";\r\n\r\nexport const StyledPeopleContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(208px, 1fr));\r\n  grid-gap: 24px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(136px, 1fr));\r\n    grid-gap: 16px;\r\n  };\r\n`;","import React from \"react\";\r\nimport PersonTile from \"../PersonTile\";\r\nimport { StyledPeopleContainer } from \"./styled\";\r\n\r\nconst PeopleContainer = ({ people }) => (\r\n  <StyledPeopleContainer>\r\n    {people !== [] ? people.map(person => <PersonTile key={person.id} person={person} />)\r\n      : <h1>brak osób do pokazania</h1>}\r\n  </StyledPeopleContainer>\r\n);\r\n\r\nexport default PeopleContainer;","import React, { useEffect } from \"react\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport Header from \"../../../common/Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPopularPeople, selectLoading, selectPeople } from \"../peopleSlice\";\r\nimport PeopleContainer from \"../PeopleContainer\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const people = useSelector(selectPeople);\r\n  const loading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPopularPeople())\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !loading\r\n      ?\r\n      <Wrapper>\r\n        <Header>Popular people</Header>\r\n        <PeopleContainer people={people} />\r\n      </Wrapper>\r\n      :\r\n      <h1>trwa ładowanie...</h1>\r\n  )\r\n};","import React, { useEffect } from \"react\";\r\nimport Header from \"../../../common/Header\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport { getGenreName } from \"../getGenreName\";\r\nimport { MoviesContainer } from \"../MoviesContainer\";\r\nimport MovieTile from \"../MovieTile\";\r\nconst { useDispatch, useSelector } = require(\"react-redux\");\r\nconst { fetchMoviesByQuery, selectMovies, selectLoading, selectGenres, fetchGenres, selectSearchQuery } = require(\"../moviesSlice\");\r\n\r\nconst MovieListPage = () => {\r\n const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchGenres());\r\n    dispatch(fetchMoviesByQuery(\"frozen\"));\r\n  }, [dispatch]);\r\n\r\n  const loading = useSelector(selectLoading);\r\n  const movies = useSelector(selectMovies);\r\n  const genres = useSelector(selectGenres);\r\n  const query = useSelector(selectSearchQuery);\r\n\r\n  const mapGenreIds = (genreIds, genres) => {\r\n    return genreIds.map((genreId) => {\r\n      return getGenreName(genreId, genres);\r\n    });\r\n  };\r\n\r\n  const generateMovies = (movies) => {\r\n    return movies.map((movie) => {\r\n      const genreNames = mapGenreIds(movie.genre_ids, genres);\r\n      return (\r\n        <MovieTile\r\n          key={movie.id}\r\n          genreNames={genreNames}\r\n          movie={movie}\r\n        ></MovieTile>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Wrapper>\r\n        <Header>Search results for \"{query}\"</Header>\r\n          <MoviesContainer>{generateMovies(movies.results)}</MoviesContainer>\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"App\">Trwa ładowanie...</div>;\r\n  }\r\n};\r\n\r\nexport default MovieListPage;\r\n","import React from \"react\";\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { toMovie, toMovieList, toMovies, toPeople, toPerson } from \"./routes\";\r\nimport MoviePage from \"./features/movies/MoviePage\";\r\nimport MoviesPage from \"./features/movies/MoviesPage\";\r\nimport PersonPage from \"./features/people/PersonPage\";\r\nimport PeoplePage from \"./features/people/PeoplePage\";\r\nimport MovieListPage from \"./features/movies/MovieListPage\";\r\n\r\nexport default () => (\r\n  <HashRouter>\r\n    <Switch>\r\n      <Route path={toMovie()}>\r\n        <MoviePage />\r\n      </Route>\r\n      <Route path={toMovies()}>\r\n        <MoviesPage />\r\n      </Route>\r\n      <Route path={toPerson()}>\r\n        <PersonPage />\r\n      </Route>\r\n      <Route path={toPeople()}>\r\n        <PeoplePage />\r\n      </Route>\r\n      <Route path={toMovieList()}>\r\n        <MovieListPage />\r\n      </Route>\r\n      <Route>\r\n        <Redirect to={toMovies()} />\r\n      </Route>\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Poppins', sans-serif;\r\n        background: ${({ theme }) => theme.color.mercury};\r\n        margin: 0;\r\n    }\r\n`;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const theme = {\r\n    color: {\r\n        black: \"#000000\",\r\n        blue: \"#0044CC\",\r\n        silver: \"#C4C4C4\",\r\n        lightBlue: \"#D6E4FF\",\r\n        yellow: \"#FCD420\",\r\n        stormGray: \"#74788B\",\r\n        darkerGrey: \"#7E839A\",\r\n        grey: \"#E4E6F0\",\r\n        mercury: \"#E5E5E5\",\r\n        white: \"#FFFFFF\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst moviesSlice = createSlice({\r\n  name: \"movies\",\r\n  initialState: {\r\n    loading: true,\r\n    movies: [],\r\n    genres: [],\r\n    movie: {},\r\n    searchQuery: \"\",\r\n  },\r\n  reducers: {\r\n    fetchPopularMovies: (state) => {\r\n      state.loading = true;\r\n      state.movies = [];\r\n    },\r\n    fetchPopularMoviesSuccess: (state, { payload: movies }) => {\r\n      state.movies = movies;\r\n      state.loading = false;\r\n    },\r\n    fetchPopularMoviesError: (state) => {\r\n      state.loading = false;\r\n      state.movies = [];\r\n    },\r\n    fetchGenres: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchGenresSuccess: (state, { payload: genres }) => {\r\n      state.genres = genres;\r\n      state.loading = true;\r\n    },\r\n    fetchGenresError: (state) => {\r\n      state.loading = false;\r\n    },\r\n    fetchMovie: (state) => {\r\n      state.loading = true;\r\n    },\r\n    fetchMovieSuccess: (state, { payload: movie }) => {\r\n      state.movie = movie;\r\n      state.loading = false;\r\n    },\r\n    fetchMovieError: (state) => {\r\n      state.loading = false;\r\n    },\r\n    fetchMoviesByQuery: (state, { payload: query }) => {\r\n      state.searchQuery = query;\r\n      state.loading = true;\r\n    },\r\n    fetchMoviesByQuerySuccess: (state, { payload: movies }) => {\r\n      state.movies = movies;\r\n      state.loading = false;\r\n    },\r\n    fetchMoviesByQueryError: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectMoviesState = (state) => state.movies;\r\nexport const selectLoading = (state) => selectMoviesState(state).loading;\r\nexport const selectMovies = (state) => selectMoviesState(state).movies;\r\nexport const selectMovie = (state) => selectMoviesState(state).movie;\r\nexport const selectGenres = (state) => selectMoviesState(state).genres;\r\nexport const selectSearchQuery = (state) => selectMoviesState(state).searchQuery;\r\n\r\nexport const {\r\n  fetchPopularMovies,\r\n  fetchPopularMoviesError,\r\n  fetchPopularMoviesSuccess,\r\n  fetchGenres,\r\n  fetchGenresError,\r\n  fetchGenresSuccess,\r\n  fetchMovie,\r\n  fetchMovieError,\r\n  fetchMovieSuccess,\r\n  fetchMoviesByQuery,\r\n  fetchMoviesByQuerySuccess,\r\n  fetchMoviesByQueryError,\r\n} = moviesSlice.actions;\r\nexport default moviesSlice.reducer;\r\n"],"sourceRoot":""}